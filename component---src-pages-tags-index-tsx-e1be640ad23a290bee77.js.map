{"version":3,"file":"component---src-pages-tags-index-tsx-e1be640ad23a290bee77.js","mappings":"uLAuIA,UAtGiBA,IAAyC,YAAxC,SAAEC,EAAQ,KAAEC,GAAuB,EACjD,MAAOC,EAAWC,GAAgBC,EAAAA,SAA0B,CAAEC,OAAQ,CAAC,KAEnEC,mBAAmB,MAAEC,GACrBC,MACIC,cAAc,MAAEC,KAEpBT,EAmBJ,OACIG,EAAAA,cAACO,EAAAA,EAAM,CAACX,SAAUA,EAAUU,MAAOA,GAC/BN,EAAAA,cAACQ,EAAAA,EAAG,CAACF,MAAM,aACXN,EAAAA,cAAAA,UAAAA,CAASS,UAAU,QACfT,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAAAA,KAAAA,KAAI,SAERA,EAAAA,cAAAA,OAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKS,UAAU,UACXT,EAAAA,cAAAA,QAAAA,CAAOS,UAAU,SACbT,EAAAA,cAAAA,QAAAA,CACIU,KAAK,OACLC,KAAK,MACLF,UAAU,wJACVG,SA3BNC,IAClB,MAAMC,EAAQD,EAAME,OAAOD,MACrBH,EAAOE,EAAME,OAAOJ,KAE1BZ,GAAciB,IAAS,IACfA,QAAAA,EAAa,CAAC,EAClBf,OAAQ,KACAe,QAAAA,EAAa,CAAC,GAAGf,OACrB,CAACU,GAAOG,MAEb,EAkBqBA,MAA4B,QAAvB,EAAkB,QAAlB,EAAEhB,EAAUG,cAAM,aAAhBgB,EAAkBC,WAAG,QAAI,GAChCC,YAAY,aAKxBnB,EAAAA,cAACoB,EAAAA,GAAO,CACJC,KAAMlB,EAAMmB,QAAQC,IAAC,mBAChBzB,EAAUG,QAA2B,QAAjB,EAACH,EAAUG,cAAM,QAAhBuB,EAAkBN,OAElB,QAAhB,EAAApB,EAAUG,cAAM,QAAhBwB,EAAkBP,MAClBK,EAAEG,WACGC,cACAC,WACmB,QADT,EACP9B,EAAUG,cAAM,OAAK,QAAL,EAAhB4B,EAAkBX,WAAG,WAAL,EAAhBY,EAAuBH,cAE1B,IAEff,SAlDIM,KACpBa,EAAAA,EAAAA,UAAU,SAAQC,IAAUd,KAAO,MAqD1B,C","sources":["webpack://bbon.me/./src/pages/tags/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport kebabCase from 'lodash/kebabCase';\nimport { graphql, PageProps, navigate } from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport { Tag } from '../../models/data';\nimport { TagList } from '../../components/tags';\n\ninterface FormValues {\n    tag?: string;\n}\n\ninterface FormState {\n    values?: FormValues;\n}\n\ninterface SiteMetadata {\n    title: string;\n}\n\ninterface Site {\n    siteMetadata: SiteMetadata;\n}\n\ninterface MarkdownRemark {\n    group: Tag[];\n}\n\ninterface Data {\n    allMarkdownRemark: MarkdownRemark;\n    site: Site;\n}\n\nconst TagsPage = ({ location, data }: PageProps<Data>) => {\n    const [formState, setFormState] = React.useState<FormState>({ values: {} });\n    const {\n        allMarkdownRemark: { group },\n        site: {\n            siteMetadata: { title },\n        },\n    } = data;\n\n    const handleClickTag = (tag: string) => {\n        navigate(`/tags/${kebabCase(tag)}`);\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        const name = event.target.name;\n\n        setFormState((prevState) => ({\n            ...(prevState ?? {}),\n            values: {\n                ...(prevState ?? {}).values,\n                [name]: value,\n            },\n        }));\n    };\n\n    return (\n        <Layout location={location} title={title}>\n            <Seo title=\"All tags\" />\n            <section className=\"py-6\">\n                <header>\n                    <h1>Tags</h1>\n                </header>\n                <main>\n                    <div className=\"w-full\">\n                        <label className=\"block\">\n                            <input\n                                type=\"text\"\n                                name=\"tag\"\n                                className=\"mt-1 block w-full rounded-md shadow-sm border-green-600 focus:border-green-300 focus:ring focus:ring-green-200 focus:ring-opacity-50 dark:bg-gray-800\"\n                                onChange={handleChange}\n                                value={formState.values?.tag ?? ''}\n                                placeholder=\"Filter\"\n                            />\n                        </label>\n                    </div>\n\n                    <TagList\n                        tags={group.filter((x) =>\n                            !formState.values || !formState.values?.tag\n                                ? true\n                                : formState.values?.tag\n                                ? x.fieldValue\n                                      .toLowerCase()\n                                      .startsWith(\n                                          formState.values?.tag?.toLowerCase()\n                                      )\n                                : false\n                        )}\n                        onChange={handleClickTag}\n                    />\n                </main>\n            </section>\n        </Layout>\n    );\n};\n\nexport const pageQuery = graphql`\n    query tagPageQuery {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n            group(field: { frontmatter: { tags: SELECT } }) {\n                fieldValue\n                totalCount\n                edges {\n                    node {\n                        excerpt(format: PLAIN)\n                        fields {\n                            slug\n                        }\n                        frontmatter {\n                            date(formatString: \"YYYY-MM-DD\")\n                            title\n                            tags\n                            categories\n                            featuredImage {\n                                childImageSharp {\n                                    gatsbyImageData(layout: FIXED)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default TagsPage;\n"],"names":["_ref","location","data","formState","setFormState","React","values","allMarkdownRemark","group","site","siteMetadata","title","Layout","Seo","className","type","name","onChange","event","value","target","prevState","_formState$values","tag","placeholder","TagList","tags","filter","x","_formState$values2","_formState$values3","fieldValue","toLowerCase","startsWith","_formState$values4","_formState$values4$ta","navigate","kebabCase"],"sourceRoot":""}