{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2022/10/24/let-create-own-vscode-extension","result":{"data":{"site":{"siteMetadata":{"title":"<bbon />","siteUrl":"https://bbon.me"}},"markdownRemark":{"id":"8abb9684-2203-5979-a441-9019006e77bb","excerpt":"타입스크립트로 비주얼 스튜디오 확장을 작성할 준비를 하고, 작성된 확작을 게시하는 내용에 대한 리뷰입니다. 비주얼 스튜디오 코드의 확작에 대한 정보는 Extension API 페이지에서 제공하고 있습니다. 준비 Your First Extension: Visual Studio Code…","html":"<p>타입스크립트로 비주얼 스튜디오 확장을 작성할 준비를 하고, 작성된 확작을 게시하는 내용에 대한 리뷰입니다.</p>\n<p>비주얼 스튜디오 코드의 확작에 대한 정보는 <a href=\"https://code.visualstudio.com/api\">Extension API</a> 페이지에서 제공하고 있습니다.</p>\n<h2>준비</h2>\n<p><a href=\"https://code.visualstudio.com/api/get-started/your-first-extension\">Your First Extension: Visual Studio Code</a> 페이지에서 타입스크립트로 확장을 작성하는 방법을 알려줍니다.</p>\n<p><a href=\"https://yeoman.io/\">yoman</a> 패키지와 <a href=\"https://www.npmjs.com/package/generator-code\">VS Code Extension Generator</a> 패키지를 사용해서 부트스트랩 코드를 얻을 수 있습니다.</p>\n<h3>의존 패키지 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> yo generator-code <span class=\"token comment\"># yoman 패키지와 vs code extension generator 패키지를 전역에 설치합니다.</span></code></pre></div>\n<h3>프로젝트 초기화</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ yo code <span class=\"token comment\"># 프로젝트를 초기화하기 위한 정보를 입력받는 내용이 출력됩니다. (아래 목록을 확인하세요.)</span></code></pre></div>\n<ol>\n<li>What type of extension do you want to create?\n<ol>\n<li>New Extension (TypeScript) 👉 <strong>선택</strong></li>\n<li>New Extension (JavaScript)</li>\n<li>New Color Theme</li>\n<li>New Language Support</li>\n<li>New Code Snippets</li>\n<li>New Keymap</li>\n<li>New Extension Pack</li>\n<li>New Language Pack (Localization)</li>\n<li>New Web Extension (TypeScript)</li>\n<li>New Notebook Renderer (TypeScript)</li>\n</ol>\n</li>\n<li>What’s the name of your extension? <strong>확장 이름 입력</strong></li>\n<li>What’s the identifier of your extension? <strong>확장 식별자 입력</strong></li>\n<li>What’s the description of your extension? <strong>설명을 입력</strong></li>\n<li>Initialize a git repository? <strong>git 저장소 초기화 N</strong> 또는 git 저장소 URI</li>\n<li>Bundle the source code with webpack? <strong>webpack을 사용해서 번들링 Y</strong></li>\n<li>Which package manager to use?\n<ol>\n<li>npm 👉 <strong>선택</strong></li>\n<li>yarn</li>\n<li>pnpm</li>\n</ol>\n</li>\n<li>Do you want to open the new folder with Visual Studio Code?\n<ol>\n<li>Open with <code class=\"language-text\">code</code></li>\n<li>Skip</li>\n</ol>\n</li>\n</ol>\n<p>프로젝트 정보를 모두 입력하면 확장의 식별자에 해당하는 디렉터리가 작성되고, 타입스크립트로 비주얼 스튜디오 코드 확장을 작성할 수 있는 환경이 준비됩니다.</p>\n<p>준비된 프로젝트의 package.json 파일을 보면, 2. 에서 입력한 내용이 <code class=\"language-text\">displayName</code> 으로 사용되고, 3. 에서 입력한 내용이 <code class=\"language-text\">name</code> 으로 사용되고, 4. 에서 입력한 내용이 <code class=\"language-text\">description</code> 으로 사용되는 것을 확인할 수 있습니다.</p>\n<p>이제, 비주얼 스튜디오 코드 확작을 작성할 준비를 마쳤습니다.</p>\n<p>원하는 기능을 구현하고, 비주얼 스튜디오 마켓플레이스에 게시하면 혹시나 비슷한 기능이 필요하신 분들이 사용할 수 있습니다.</p>\n<h2>게시</h2>\n<p><a href=\"https://code.visualstudio.com/api/working-with-extensions/publishing-extension\">Publishing Extension: Visual Studio Code</a> 페이지에서 작성한 확장을 비주얼 스튜디오 마켓플레이스에 게시하는 방법을 설명합니다.</p>\n<p><a href=\"https://marketplace.visualstudio.com/\">비주얼 스튜디오 마켓플레이스</a>에 사인인하고, <a href=\"https://marketplace.visualstudio.com/manage\">비주얼 스튜디오 마켓플레이스 관리</a> 페이지에서 게시자(Publisher)를 작성해야 합니다.</p>\n<p>로컬 개발환경에서 게시하기 위해서, <a href=\"https://github.com/microsoft/vscode-vsce\">vsce</a> 도구를 사용합니다.</p>\n<p>비주얼 스튜디오 마켓플레이스는 애져 데브옵스 마켓플레이스 서비스를 사용하므로, 애져 데브옵스 계정을 작성해야 합니다.</p>\n<p>애져 데브옵스 계정 작성과 개인 액세스 토큰 (PAT, Personal Access Token)을 작성하는 방법을 <a href=\"https://code.visualstudio.com/api/working-with-extensions/publishing-extension\">Publishing Extension: Visual Studio Code</a><a href=\"https://code.visualstudio.com/api/working-with-extensions/publishing-extension#get-a-personal-access-token\">#Get a Personal Access Token</a> 페이지에서 설명하고 있습니다.</p>\n<p>비주얼 스튜디오 마켓플레이스의 게시자 작상과 애져 데브옵스의 액세스 토큰을 작성했으면, 이제 게시할 준비를 마쳤습니다.</p>\n<h3>게시전 확인 사항</h3>\n<p><a href=\"https://code.visualstudio.com/api/working-with-extensions/publishing-extension\">Publishing Extension: Visual Studio Code</a><a href=\"https://code.visualstudio.com/api/working-with-extensions/publishing-extension#publishing-extensions\">#Publishing extensions</a> 페이지에서 vsce 도구로 게시할 때, 확인하는 사항을 설명하고 있습니다.</p>\n<ul>\n<li>사용하는 이미지 파일의 URI 는 <code class=\"language-text\">HTTPS</code> 를 사용해야 합니다.</li>\n<li>svg 파일은 <a href=\"https://code.visualstudio.com/api/references/extension-manifest#approved-badges\">신뢰하는 제공자</a>가 아니면 사용하지 않는 것을 권장합니다.</li>\n</ul>\n<p>package.json 파일에 아래 항목이 존재하는 확인합니다.</p>\n<ul>\n<li>publisher</li>\n<li>version</li>\n</ul>\n<h3>게시자 식별자</h3>\n<p>프로젝트의 package.json 파일을 열고, publisher 항목을 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ... 생략</span>\n    <span class=\"token property\">\"publisher\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;비주얼 스튜디오 마켓플레이스 게시자 식별자>\"</span>\n    <span class=\"token comment\">// ... 생략</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>번들링 확인</h3>\n<p>게시전에 문제없이 번들이 작성되는지 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> run vscode:prepublish</code></pre></div>\n<h3>vsce 도구 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> vsce</code></pre></div>\n<h3>vsce 로그인</h3>\n<blockquote>\n<p>동일한 환경에서 게시를 시도하는 중이면 최초 한번만 vsce 로그인을 진행하시면 됩니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ vsce login <span class=\"token operator\">&lt;</span>비주얼 스튜디오 마켓플레이스 게시자 식별자<span class=\"token operator\">></span></code></pre></div>\n<p>개인 액세스 토큰(PAT, Personal Access Token) 입력을 기다리는 프롬프트가 출력되면 애져 데브옵스에서 작성한 개인 액세스 토큰(PAT, Personal Access Token)을 입력합니다.</p>\n<p>아래 명령으로 정상적으로 로그인이 되었는지 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ vsce ls-publishers <span class=\"token comment\"># 정상적으로 로그인된 경우 게시자 목록이 출력됩니다.</span></code></pre></div>\n<h3>게시</h3>\n<p>아래 명령으로 번들링하고, 비주얼 스튜디오 마켓플레이스에 게시합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ vsce publish</code></pre></div>\n<p>게시된 확작은 확인 후 바로 공개됩니다.</p>\n<h3>문제해결</h3>\n<p><code class=\"language-text\">vsce publish</code> 명령은 현재 작업중인 프로젝트가 깃 저장소인 경우 기본적으로 깃 태그를 작성합니다.</p>\n<p>따라서, 현재 저장소에 작성하려는 태그가 있으면 게시가 실패합니다.</p>\n<p>예상되는 실패 메시지는 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">Error: Invalid URL\nError: Process completed with exit code 1.</code></pre></div>\n<p>이 경우 <code class=\"language-text\">vsce publish</code> 명령에 옵션을 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ vsce publish --no-git-tag-version --no-update-package-json</code></pre></div>\n<ul>\n<li><code class=\"language-text\">--no-git-tag-version</code>: 깃 태그를 작성하지 않습니다.</li>\n<li><code class=\"language-text\">--no-update-package-json</code>: package.json 파일을 변경하지 않습니다.</li>\n</ul>\n<h2>마침</h2>\n<p>이제 원하는 기능이 포함된 확장을 작성하고 게시할 수 있습니다.</p>","frontmatter":{"title":"Let create own vscode extension","date":"October 24, 2022","description":null,"categories":["computing","howto"],"tags":["typescript","vscode","vscode extensions"],"github":null,"featuredImage":null,"draft":null,"comments":false}},"previous":{"fields":{"slug":"/2022/06/17/fail-to-update-visual-studio-2022-for-mac-17-3-preview-2/"},"frontmatter":{"title":"Fail to update Visual Studio 2022 for Mac 17.3 Preview 2","draft":null,"comments":false,"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#282828","images":{"fallback":{"src":"/static/78307f83c6c45b6cd76534be60c0a122/656a3/fail-to-update-visual-studio-2022-for-mac-17-3-preview-2-02.png","srcSet":"/static/78307f83c6c45b6cd76534be60c0a122/656a3/fail-to-update-visual-studio-2022-for-mac-17-3-preview-2-02.png 2060w","sizes":"2060px"},"sources":[{"srcSet":"/static/78307f83c6c45b6cd76534be60c0a122/bfbc5/fail-to-update-visual-studio-2022-for-mac-17-3-preview-2-02.webp 2060w","type":"image/webp","sizes":"2060px"}]},"width":2060,"height":1496}}}}},"next":{"fields":{"slug":"/2022/10/24/new-cs-file-vscode-extension/"},"frontmatter":{"title":"New CS File - vscode extension","draft":null,"comments":null,"featuredImage":null}}},"pageContext":{"id":"8abb9684-2203-5979-a441-9019006e77bb","previousPostId":"1ab19c2f-70e3-5531-bf63-2ffe7e0446c5","nextPostId":"a07e25e8-fa9b-5597-949e-f687c9b3269b"}},"staticQueryHashes":["2644450635","3199328057"]}