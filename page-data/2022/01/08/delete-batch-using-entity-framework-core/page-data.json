{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2022/01/08/delete-batch-using-entity-framework-core","result":{"data":{"site":{"siteMetadata":{"title":"<bbon />","siteUrl":"https://bbon.me"}},"markdownRemark":{"id":"e91b57fc-ecc0-5f20-8f03-049ee900e52f","excerpt":"Entity Framework Core: Bulk updates 를 읽고, 어느 정도 성능향상이 있을까 궁금해서 간략하게 코드를 작성해서 실행 시간을 측정했습니다. 프로젝트 설명 환경 Visual Studio 2022 (v17.0.4) Localdb (appsettings.json…","html":"<p><a href=\"https://docs.microsoft.com/en-us/ef/core/performance/efficient-updating#bulk-updates\">Entity Framework Core: Bulk updates</a> 를 읽고, 어느 정도 성능향상이 있을까 궁금해서 간략하게 코드를 작성해서 실행 시간을 측정했습니다.</p>\n<h2>프로젝트 설명</h2>\n<h3>환경</h3>\n<ul>\n<li>Visual Studio 2022 (v17.0.4)</li>\n<li>Localdb (appsettings.json 에서 연결문자열을 확인하세요.)</li>\n<li>.NET 6</li>\n<li>EntityFrameworkCore v6.0.1</li>\n</ul>\n<h3>마이그레이션</h3>\n<p>엔티티를 변경해서 확인하려면 아래 명령을 참조해서 마이그레이션 코드를 추가해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># DataContext 가 포함된 프로젝트 디렉터리로 이동합니다.</span>\n$ <span class=\"token builtin class-name\">cd</span> src/Sample.Data\n<span class=\"token comment\"># 마이그레이션 코드를 작성합니다.</span>\n$ dotnet ef migrations <span class=\"token function\">add</span> <span class=\"token string\">\"Initialize database\"</span> <span class=\"token parameter variable\">--context</span> AppDbContext --startup-project <span class=\"token punctuation\">..</span>/Sample.App <span class=\"token parameter variable\">--project</span> <span class=\"token punctuation\">..</span>/Sample.Data.SqlServer <span class=\"token parameter variable\">--json</span></code></pre></div>\n<h2>확인</h2>\n<h3>행 추가 (#1-1, #1-2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- Declaring variables </span>\n\n<span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@inserted0</span> <span class=\"token keyword\">TABLE</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>Id<span class=\"token punctuation\">]</span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>_Position<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">MERGE</span> <span class=\"token punctuation\">[</span>UserToken<span class=\"token punctuation\">]</span> <span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@p0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token variable\">@p4</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p5</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p6</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token variable\">@p8</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p9</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p10</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">-- 생략</span>\n<span class=\"token punctuation\">(</span><span class=\"token variable\">@p160</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p161</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p162</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token variable\">@p164</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p165</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p166</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@p167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> i <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>CreatedAt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ExpiresAt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>Purpose<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>Token<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> _Position<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token keyword\">WHEN</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">MATCHED</span> <span class=\"token keyword\">THEN</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>CreatedAt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ExpiresAt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>Purpose<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>Token<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>CreatedAt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>ExpiresAt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Purpose<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Token<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nOUTPUT INSERTED<span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>_Position\n<span class=\"token keyword\">INTO</span> <span class=\"token variable\">@inserted0</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>행 삭제 (#2)</h3>\n<p>DELETE 문이 각 행별로 작성되어 실행됩니다.</p>\n<p>1,000 행을 대상으로 약 507 밀리초가 소요되었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> deleteCandidate <span class=\"token operator\">=</span> Context<span class=\"token punctuation\">.</span>UserTokens<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>ExpiresAt <span class=\"token operator\">&lt;=</span> DateTime<span class=\"token punctuation\">.</span>UtcNow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nContext<span class=\"token punctuation\">.</span>UserTokens<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveRange</span><span class=\"token punctuation\">(</span>deleteCandidate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">await</span> Context<span class=\"token punctuation\">.</span><span class=\"token function\">SaveChangesAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- Declaring variables </span>\n\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">[</span>UserToken<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">[</span>Id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@p0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@ROWCOUNT</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">[</span>UserToken<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">[</span>Id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@p1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@ROWCOUNT</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">[</span>UserToken<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">[</span>Id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@p2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@ROWCOUNT</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 생략</span></code></pre></div>\n<h3>행 삭제 (#4)</h3>\n<p>SQL 문으로 삭제 명령을 정의하고, 실행합니다.</p>\n<blockquote>\n<p>ANSI sql 문으로 작성하면 DBMS 의존을 줄일 수 있다고 생각합니다.</p>\n</blockquote>\n<p>1,000 행을 대상으로 약 17 밀리초가 소요되었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> sql <span class=\"token operator\">=</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span>Empty<span class=\"token punctuation\">;</span>\nsql <span class=\"token operator\">+=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"DELETE FROM </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\"><span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>UserToken<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> \"</span></span><span class=\"token punctuation\">;</span>\nsql <span class=\"token operator\">+=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\" WHERE </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\"><span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>UserToken<span class=\"token punctuation\">.</span>ExpiresAt<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> &lt;= GetUtcDate()\"</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">await</span> Context<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteSqlRawAsync</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>SQL 문 실행시 트랜잭션 확인 (#3)</h3>\n<p>SQL 문으로 명령을 실행할 때, 트랜잭션을 확인합니다.</p>\n<p>SQL 문의 결과가 커밋되지 않고 정상적으로 롤백됨을 확인했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> transaction <span class=\"token operator\">=</span> Context<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">BeginTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">await</span> Context<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteSqlRawAsync</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">await</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">CommitAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">await</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">RollbackAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>마침</h2>\n<p>일괄 작업으로 변경, 삭제 작업을 실행할 때, 성능향상을 위해 SQL 문을 고려할 필요가 있을 것 같습니다.</p>\n<p>만료된 토큰 정리, 로그 정리 등에 사용하면 좋을 것으로 생각됩니다.</p>","frontmatter":{"title":"Delete batch using Entity Framework Core","date":"January 08, 2022","description":null,"categories":["blog","computing","repository"],"tags":["dotnet","net-6","ef","ef-core","efcore","entityframework","entityframeworkcore","github","github-repository"],"github":{"owner":"bbonkr","repo":"sample.ef.batch"},"featuredImage":null,"draft":null,"comments":null}},"previous":{"fields":{"slug":"/2022/01/03/review-2021/"},"frontmatter":{"title":"Review 2021","draft":null,"comments":null,"featuredImage":null}},"next":{"fields":{"slug":"/2022/01/15/mac-book-onboarding-for-development/"},"frontmatter":{"title":"MacBook onboarding for development","draft":null,"comments":null,"featuredImage":null}}},"pageContext":{"id":"e91b57fc-ecc0-5f20-8f03-049ee900e52f","previousPostId":"29f2134a-18f7-5091-b89b-004536947e5b","nextPostId":"5808db8c-4e8e-5f0f-9bad-9d4c1839e9e5"}},"staticQueryHashes":["2644450635","3199328057"]}