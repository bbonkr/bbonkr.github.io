{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2022/05/24/enumerable-string-union-type","result":{"data":{"site":{"siteMetadata":{"title":"<bbon />","siteUrl":"https://bbon.me"}},"markdownRemark":{"id":"250c7f00-3ad6-57af-9225-5c515337b3ae","excerpt":"지정된 문자열만 사용할 수 있는 문자열 변수를 선언할 때, 문자열 조합 형식 String Union Type…","html":"<p>지정된 문자열만 사용할 수 있는 문자열 변수를 선언할 때, 문자열 조합 형식 <small>String Union Type</small>을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Status</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Todo'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'InProgress'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'Done'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> status<span class=\"token operator\">:</span> Status <span class=\"token operator\">=</span> <span class=\"token string\">'Todo'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ✔️ OK</span>\n<span class=\"token keyword\">const</span> status2<span class=\"token operator\">:</span> Status <span class=\"token operator\">=</span> <span class=\"token string\">'None'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ❌ Error</span></code></pre></div>\n<p>이 때, 문자열 조합 형식이 허용하는 문자열을 출력하려고 하면, 쉬운 방법이 생각나지 않습니다.</p>\n<blockquote>\n<p>아래 코드는 임의로 작성한 코드이고, 동작하지 않습니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token literal-property property\">some</span><span class=\"token operator\">:</span> Status <span class=\"token comment\">// ??</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>Status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> // ??\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이를 위해 아래와 같이 형식 정의를 변경할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> statusTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Todo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'InProgress'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Done'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Status</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> statusTypes<span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> status<span class=\"token operator\">:</span> Status <span class=\"token operator\">=</span> <span class=\"token string\">'Todo'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ✔️ OK</span>\n<span class=\"token keyword\">const</span> status2<span class=\"token operator\">:</span> Status <span class=\"token operator\">=</span> <span class=\"token string\">'None'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ❌ Error</span></code></pre></div>\n<p>첫번째, 두번째 <code class=\"language-text\">Status</code> 형식 정의는 동일하게 동작합니다.</p>\n<p>이제 문자열 조합 형식이 허용하는 문자열을 쉽게 출력할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token punctuation\">{</span>statusTypes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> // 🙂\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre></div>","frontmatter":{"title":"Enumerable String Union Type","date":"2022-05-24","description":null,"categories":["blog","howto","computing"],"tags":["typescript","tip"],"github":null,"featuredImage":null,"draft":null,"comments":false}},"previous":{"fields":{"slug":"/2022/04/28/typescript-project-with-eslint-8/"},"frontmatter":{"title":"Typescript project with eslint@8","draft":null,"comments":false,"featuredImage":null}},"next":{"fields":{"slug":"/2022/05/24/maui-on-mac-os/"},"frontmatter":{"title":"MAUI on MacOS","draft":null,"comments":false,"featuredImage":null}}},"pageContext":{"id":"250c7f00-3ad6-57af-9225-5c515337b3ae","previousPostId":"d830e400-6cdf-5d24-8287-3e0c97948bd2","nextPostId":"a234860d-438b-5880-b996-3e7c4eaa93df"}},"staticQueryHashes":["2644450635","3199328057"],"slicesMap":{}}