{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/2019/07/25/how-to-separate-projects-in-asp-net-core-web-application/",
    "result": {"data":{"site":{"siteMetadata":{"title":"<bbon />"}},"markdownRemark":{"id":"7b9f9f07-1639-5949-a188-5c2f261aed46","excerpt":"ASP.NET Core 웹 응용프로그램을 작성할 때, 웹 응용프로그램 프로젝트에서 컨트롤러를 다른 프로젝트로 분리하기를 원하면 이런 방법이 검토해 보십시오. 신규 프로젝트 작성 컨트롤러를 분리할 프로젝트를 작성합니다. .NET Standard…","html":"<p>ASP.NET Core 웹 응용프로그램을 작성할 때, 웹 응용프로그램 프로젝트에서 컨트롤러를 다른 프로젝트로 분리하기를 원하면 이런 방법이 검토해 보십시오.</p>\n<h2>신규 프로젝트 작성</h2>\n<p>컨트롤러를 분리할 프로젝트를 작성합니다.</p>\n<blockquote>\n<p>.NET Standard 클래스 라이브러리 템플릿 사용</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> Blog.Backend.Api.Account\n$ <span class=\"token builtin class-name\">cd</span> Blog.Backend.Api.Account\n$ dotnet new classlib</code></pre></div>\n<p>필요한 Nuget 패키지를 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ dotnet <span class=\"token function\">add</span> package Microsoft.AspNetCore.Mvc --version <span class=\"token number\">2.2</span>.0\n$ dotnet <span class=\"token function\">add</span> package Microsoft.Extensions.Logging --version <span class=\"token number\">2.2</span>.0</code></pre></div>\n<blockquote>\n<p>예제:\n<a href=\"https://github.com/bbonkr/blog-aspnetcore-backend/blob/304183f7f767fe492ae0278bebd1706ea6550f6e/Blog.Backend.Api.Account/Blog.Backend.Api.Account.csproj#L7\">porject file</a></p>\n</blockquote>\n<p>컨트롤러 클래스를 새로 추가한 프로젝트로 복사하고, 네임스페이스를 조정합니다.</p>\n<p>IServiceCollection 에 확장 메서드를 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ServicesConfigureExtesion</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">IServiceCollection</span> <span class=\"token function\">AddAccountApiController</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">IServiceCollection</span> services<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 옮긴 컨트롤러 클래스를 IoC 컨테이너에 등록합니다.</span>\n        services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddTransient</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>UserController<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddTransient</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AccountController<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> services<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">IMvcBuilder</span> <span class=\"token function\">AddAccountApiController</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">IMvcBuilder</span> builder<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> currentAssembly <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">ServicesConfigureExtesion</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetTypeInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Assembly<span class=\"token punctuation\">;</span>\n\n        builder\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AddApplicationPart</span><span class=\"token punctuation\">(</span>currentAssembly<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> builder<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>예제:\n<a href=\"https://github.com/bbonkr/blog-aspnetcore-backend/blob/304183f7f767fe492ae0278bebd1706ea6550f6e/Blog.Backend.Api.Account/ServicesConfigureExtesion.cs#L7\">IServiceCollection 확장메서드</a></p>\n</blockquote>\n<h2>웹 응용프로그램 코드 변경</h2>\n<p>다른 프로젝트로 옮긴 컨트롤러 클래스를 웹 응용프로그램에서 사용할 수 있도록 프로젝트 참조를 추가하고, Startup 클래스의 ConfigureServices 메서드에 새로운 프로젝트에서 정의한 IServiceCollection 확장메서드를 사용하는 코드를 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ConfigureServices</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IServiceCollection</span> services<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 중략 */</span>\n\n    services\n        <span class=\"token comment\">/* IServiceCollection 확장메서드 */</span>\n        <span class=\"token comment\">/* IoC 컨테이너에 타입을 등록 */</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddAccountApiController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddMvc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">/* IMvcBuilder 확장메서드 */</span>\n        <span class=\"token comment\">/* 다른 어셈블리의 컨트롤러를 사용하도록 구성 */</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddAccountApiController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">SetCompatibilityVersion</span><span class=\"token punctuation\">(</span>Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Mvc<span class=\"token punctuation\">.</span>CompatibilityVersion<span class=\"token punctuation\">.</span>Version_2_2<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddControllersAsServices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* 중략 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>예제:\n<a href=\"https://github.com/bbonkr/blog-aspnetcore-backend/blob/304183f7f767fe492ae0278bebd1706ea6550f6e/Blog.Backend/Startup.cs#L98\">Startup.cs 예제</a></p>\n</blockquote>\n<h2>추가</h2>\n<p>라우트 구성이 변경되어야 하면 Startup 클래스의 Configure 메서드에서 라우트를 추가합니다.</p>\n<blockquote>\n<p>예제:\n<a href=\"https://github.com/bbonkr/blog-aspnetcore-backend/blob/304183f7f767fe492ae0278bebd1706ea6550f6e/Blog.Backend/Startup.cs#L150\">Startup.cs 예제</a></p>\n</blockquote>","frontmatter":{"title":"How to separate projects in asp net core web application","date":"July 25, 2019","description":null,"categories":["howto"],"tags":["aspnetcore","mvc","webapi"],"github":null,"image":null,"draft":null,"comments":null}},"previous":{"fields":{"slug":"/2019/07/23/react-native-score-board/"},"frontmatter":{"title":"회고 React Native Score Board","image":null,"draft":null,"comments":null}},"next":{"fields":{"slug":"/2019/08/25/create-swap-file-on-ubuntu/"},"frontmatter":{"title":"Create SWAP file on Ubuntu","image":null,"draft":null,"comments":null}}},"pageContext":{"id":"7b9f9f07-1639-5949-a188-5c2f261aed46","previousPostId":"13fc283b-9fa0-5515-b444-d45495491f33","nextPostId":"d6722727-8439-59e2-b1f7-cc99c29ec3bb"}},
    "staticQueryHashes": ["2568428658","3199328057"]}