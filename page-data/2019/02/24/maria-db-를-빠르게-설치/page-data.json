{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/2019/02/24/maria-db-를-빠르게-설치/",
    "result": {"data":{"site":{"siteMetadata":{"title":"<bbon />","siteUrl":"https://bbon.me"}},"markdownRemark":{"id":"013c20dd-5326-5268-b17f-f29fb1d3ccaa","excerpt":"도커 Docker Docker는 컨테이너를 사용해 애플리케이션을 신속하게 구축, 테스트 및 배포할 수 있는 소프트웨어 플랫폼입니다. 저는 개발 환경을 준비하기 위해 도커 Docker…","html":"<h2>도커 Docker</h2>\n<p><a href=\"https://www.docker.com/\">Docker</a>는 컨테이너를 사용해 애플리케이션을 신속하게 구축, 테스트 및 배포할 수 있는 소프트웨어 플랫폼입니다.</p>\n<p>저는 개발 환경을 준비하기 위해 도커 <small>Docker</small>를 활용하고 있습니다.</p>\n<h2>도커 설치</h2>\n<p><a href=\"https://hub.docker.com/editions/community/docker-ce-desktop-windows\">설치 파일</a>을 내려받아 설치합니다. 링크는 윈도우즈에서 도커를 사용하기 위해 필요합니다.</p>\n<h2>이미지 검색</h2>\n<p>MariaDB 이미지를 검색합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> docker search mariadb\nNAME                                                      DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED\nmariadb                                                   MariaDB is a community-developed fork of MyS…   2596                <span class=\"token namespace\">[OK]</span>\nbitnami/mariadb                                           Bitnami MariaDB Docker Image                    86                                      <span class=\"token namespace\">[OK]</span>\nlinuxserver/mariadb                                       A Mariadb container<span class=\"token punctuation\">,</span> brought to you by Linux…   59\ntoughiq/mariadb-cluster                                   Dockerized Automated MariaDB Galera Cluster …   37                                      <span class=\"token namespace\">[OK]</span></code></pre></div>\n<h2>이미지 다운로드</h2>\n<p>공식 이미지를 다운로드합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> docker pull mariadb</code></pre></div>\n<h2>컨테이너 실행</h2>\n<p>다운로드 받은 이미지로 컨테이너를 실행합니다.</p>\n<blockquote>\n<p>컨테이너 실행 인수와 환경변수는 <a href=\"https://hub.docker.com/_/mariadb\">docker hub mariadb</a>에서 확인할 수 있습니다.</p>\n</blockquote>\n<h2>docker-compose</h2>\n<p>docker-compose를 사용하면 컨테이너 실행시 복잡하게 입력해야 하는 인수를 미리 준비하고 컨테이너 실행, 중지, 제거 절차를 손쉽게 처리할 수 있습니다.</p>\n<p>적당한 디렉터리에 docker-compose.yml 파일을 아래의 내용으로 작성합니다.</p>\n<p>사용자 프로필 디렉터리에 docker 디렉터리를 만들고 컨테이너 이름에 해당하는 mariadb 디렉터리를 만들었습니다.\n그 안에 config, data 디렉터리를 추가했습니다.\ndocker-compose.yml 파일은 mariadb 디렉터리에 있습니다.</p>\n<p>사용자 프로필 디렉터리는 윈도우즈 탐색기를 열고 주소창에 %userprofile% 을 입력하면 바로 이동할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> tree <span class=\"token punctuation\">.</span>\nC:\\USERS\\<span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>\\DOCKER\n└─mariadb\n├─config\n└─<span class=\"token keyword\">data</span></code></pre></div>\n<p>docker-compose.yml 파일의 내용입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.1\"</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> mariadb\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mariadb<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 3306<span class=\"token punctuation\">:</span><span class=\"token number\">3306</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> /c/Users/<span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>/docker/mariadb/data<span class=\"token punctuation\">:</span>/var/lib/mysql\n      <span class=\"token punctuation\">-</span> /c/Users/<span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>/docker/mariadb/config<span class=\"token punctuation\">:</span>/etc/mysql/conf.d\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> password <span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">TZ</span><span class=\"token punctuation\">:</span> Asia/Seoul</code></pre></div>\n<blockquote>\n<p>{username}: 윈도우즈 사용자 계정이름으로 변경이 필요합니다.\n{password}: mariadb root 계정의 비밀번호로 변경이 필요합니다. (원하는 값으로 변경합니다.)</p>\n</blockquote>\n<p>mariadb/config 디렉터리에는 미리 구성한 cnf 파일을 추가합니다.</p>\n<p>제가 사용하는 문자셋과 정렬을 구성한 mariadb.cnf 파일의 내용은 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token comment\"># MariaDB-specific config file.</span>\n<span class=\"token comment\"># Read by /etc/mysql/my.cnf</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">client</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\"># Default is Latin1, if you need UTF-8 set this (also in server section)</span>\n<span class=\"token comment\">#default-character-set = utf8</span>\n<span class=\"token key attr-name\">default-character-set</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">utf8mb4</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">mysql</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">default-character-set</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">utf8mb4</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">mysqld</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># * Character sets</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Default is Latin1, if you need UTF-8 set all this (also in client section)</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\">#character-set-server  = utf8</span>\n<span class=\"token comment\">#collation-server      = utf8_general_ci</span>\n<span class=\"token comment\">#character_set_server   = utf8</span>\n<span class=\"token comment\">#collation_server       = utf8_general_ci</span>\n<span class=\"token comment\"># Import all .cnf files from configuration directory</span>\n<span class=\"token key attr-name\">character-set-client-handshake</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">FALSE</span>\n<span class=\"token key attr-name\">character-set-server</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">utf8mb4</span>\n<span class=\"token key attr-name\">collation-server</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">utf8mb4_unicode_ci</span>\n\n!includedir /etc/mysql/mariadb.conf.d/</code></pre></div>\n<p>docker-compose.yml 파일을 작성했으면, 해당 파일이 있는 위치에서 아래 명령으로 컨테이너는 작성하고 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> docker-compose up <span class=\"token operator\">-</span>d</code></pre></div>\n<p>컨테이너 상태를 확인하려면 ps 명령을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> docker-compose <span class=\"token function\">ps</span>\nThe system cannot find the path specified<span class=\"token punctuation\">.</span>\n Name               Command             State           Ports\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\nmariadb   docker-entrypoint<span class=\"token punctuation\">.</span>sh mysqld   Up      0<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>0:3306->3306/tcp</code></pre></div>\n<p>컨테이너를 중지하려면 stop 명령을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> docker-compose stop</code></pre></div>\n<p>컨테이너를 시작하려면 start 명령을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> docker-compose <span class=\"token function\">start</span></code></pre></div>\n<p>컨테이너를 제거하려면 down 명령을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">ps</span>> docker-compose down</code></pre></div>","frontmatter":{"title":"MariaDB 를 빠르게 설치","date":"February 24, 2019","description":null,"categories":["computing"],"tags":["docker","mariadb"],"github":null,"featuredImage":null,"draft":null,"comments":null}},"previous":{"fields":{"slug":"/2019/02/09/rename-app/"},"frontmatter":{"title":"Rename App","draft":null,"comments":null,"featuredImage":null}},"next":{"fields":{"slug":"/2019/04/07/microsoft-store-file-rename-app/"},"frontmatter":{"title":"Microsoft Store File Rename App","draft":null,"comments":null,"featuredImage":null}}},"pageContext":{"id":"013c20dd-5326-5268-b17f-f29fb1d3ccaa","previousPostId":"66047a69-0b6e-5787-a15f-3ddd561035cf","nextPostId":"52db9c61-db1e-5049-8aad-b5e776854262"}},
    "staticQueryHashes": ["3068608076","3199328057"]}