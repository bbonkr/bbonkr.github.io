{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2017/07/13/function-password-mysql","result":{"data":{"site":{"siteMetadata":{"title":"<bbon />","siteUrl":"https://bbon.me"}},"markdownRemark":{"id":"10db5bf2-1b79-5f5e-a5cb-2fca0883fee7","excerpt":"MySql 의 PASSWORD 함수는 해시값을 계산한 문자열을 반환하는 함수입니다. 비밀번호를 처리할 때 많이 사용됩니다. 실제 서버의 계정 비밀번호도 PASSWORD 함수를 사용해서 처리하게 됩니다. 주의\n해시가 계산된 값이 4.1.0 이전 버전과 4.1.…","html":"<p>MySql 의 PASSWORD 함수는 해시값을 계산한 문자열을 반환하는 함수입니다.</p>\n<p>비밀번호를 처리할 때 많이 사용됩니다. 실제 서버의 계정 비밀번호도 PASSWORD 함수를 사용해서 처리하게 됩니다.</p>\n<blockquote>\n<p>주의\n해시가 계산된 값이 4.1.0 이전 버전과 4.1.1 이후 버전이 다릅니다.\n<a href=\"https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html\">Password Hashing in MySQL</a> 페이지 참조하십시오.</p>\n</blockquote>\n<p>4.1.1 이후 버전에서 PASSWORD 함수 결과는 아래와 같습니다.\n결과는 문자열입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">MYSQL<span class=\"token operator\">></span> <span class=\"token keyword\">select</span> password<span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>결과\n<code class=\"language-text\">*6B4F89A54E2D27ECD7E8DA05B4AB8FD9D1D8B119</code></p>\n</blockquote>\n<p>PASSWORD 함수의 동작에 대한 내용을 <a href=\"https://www.pythian.com/blog/hashing-algorithm-in-mysql-password-2/\">HASHING ALGORITHM IN MYSQL PASSWORD()</a> 페이지에서 찾을 수 있습니다.</p>\n<p>위 링크 페이지의 내용에서는 아래와 같이 동일한 값을 얻을 수 있다고 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">MYSQL<span class=\"token operator\">></span> <span class=\"token keyword\">select</span> password<span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> result\n<span class=\"token keyword\">union</span> <span class=\"token keyword\">all</span>\n<span class=\"token keyword\">select</span> concat<span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">convert</span><span class=\"token punctuation\">(</span>sha1<span class=\"token punctuation\">(</span>unhex<span class=\"token punctuation\">(</span>sha1<span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">USING</span> utf8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">*6B4F89A54E2D27ECD7E8DA05B4AB8FD9D1D8B119</code>\n<code class=\"language-text\">*6b4f89a54e2d27ecd7e8da05b4ab8fd9d1d8b119</code></p>\n</blockquote>\n<p>password 함수는 sha1 해시 값을 다시 sha1 해시 값을 계산한 값을 문자열로 표현하고, ’<code class=\"language-text\">*</code>’ 을 앞에 붙인 것과 동일합니다.</p>\n<p>기존 시스템이 MySql 로 운영되고 있을 때, 이를 다른 DBMS로 이관을 해야하면 문자열을 그대로 이관하고, PASSWORD 함수와 동일한 동작을 할 수 있는 해시 함수를 작성해서 처리할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GenerateMySQLHash</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> key<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> keyArray <span class=\"token operator\">=</span> Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">SHA1Managed</span> enc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SHA1Managed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> encodedKey <span class=\"token operator\">=</span> enc<span class=\"token punctuation\">.</span><span class=\"token function\">ComputeHash</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">.</span><span class=\"token function\">ComputeHash</span><span class=\"token punctuation\">(</span>keyArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">StringBuilder</span> myBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringBuilder</span><span class=\"token punctuation\">(</span>encodedKey<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">byte</span></span> b <span class=\"token keyword\">in</span> encodedKey<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        myBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"X2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"*\"</span> <span class=\"token operator\">+</span> myBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token function\">GenerateMySQLHash</span><span class=\"token punctuation\">(</span>'hello'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>결과</p>\n<p><code class=\"language-text\">*6B4F89A54E2D27ECD7E8DA05B4AB8FD9D1D8B119</code></p>\n</blockquote>","frontmatter":{"title":"Mysql Password 함수","date":"2017-07-13","description":"Mysql Password 함수","categories":["computing"],"tags":["mysql","password","function"],"github":null,"featuredImage":null,"draft":null,"comments":false}},"previous":{"fields":{"slug":"/2017/03/29/ios-10-3/"},"frontmatter":{"title":"iOS 10.3","draft":null,"comments":false,"featuredImage":null}},"next":{"fields":{"slug":"/2017/08/16/error-git-on-visual-studio-2017/"},"frontmatter":{"title":"Visual Studio 2017 에서 원격 저장소로 푸시 중 오류 발생","draft":null,"comments":false,"featuredImage":null}}},"pageContext":{"id":"10db5bf2-1b79-5f5e-a5cb-2fca0883fee7","previousPostId":"1790dede-47fa-5b54-a1e0-69d2b112d6a4","nextPostId":"85ebb180-35e2-5183-a473-e05561202ea9"}},"staticQueryHashes":["2644450635","3199328057"],"slicesMap":{}}