{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/2020/09/07/filedownload-within-spa/",
    "result": {"data":{"site":{"siteMetadata":{"title":"<bbon />","siteUrl":"https://bbon.me"}},"markdownRemark":{"id":"9f5dd717-2670-50b3-ae53-dd3ab9942631","excerpt":"SPA Single Page Application 로 작성중인 웹 응용프로그램에서 파일 다운로드를 구현할 때, 새 창으로 다운로드할 파일의 URI를 제공해서 처리하면 매우 편리하게 파일을 다운로드할 수 있습니다. 파일 URI…","html":"<p>SPA <small>Single Page Application</small> 로 작성중인 웹 응용프로그램에서 파일 다운로드를 구현할 때, 새 창으로 다운로드할 파일의 URI를 제공해서 처리하면 매우 편리하게 파일을 다운로드할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fileDownloadUri <span class=\"token operator\">=</span> <span class=\"token string\">'파일 다운로드 URI'</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>fileDownloadUri<span class=\"token punctuation\">,</span> <span class=\"token string\">'_blank'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>파일 URI와 함께 인증이 필요할 때, 쿠키를 사용중이면 동일하게 사용하면 됩니다.</p>\n<p>그런데, 쿠키를 사용하지 않고, JWT 등을 사용해서 요청 헤더에 데이터를 제공하는 형식으로 인증을 처리중이면, 새창을 열어서 처리하는 방식으로는 처리가 불가능합니다.</p>\n<p>이 때, 사용할 수 있는 간단한 코드조각을 npm 패키지로 공유합니다.</p>\n<h2>📢 @bbon/filedownload 패키지</h2>\n<p><a href=\"https://www.npmjs.com/package/@bbon/filedownload\">npm: @bbon/filedownload 패키지</a> 페이지에서 패키지를 확인하실 수 있습니다.</p>\n<h2>🛠 설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> @bbon/filedownload</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @bbon/filedownload</code></pre></div>\n<h2>🎮 사용</h2>\n<p>HTTP 요청은 사용중인 패키지 또는 API를 사용하시면 됩니다.</p>\n<p>응답 형식은 <code class=\"language-text\">BLOB</code> 으로 지정되어야 합니다.</p>\n<p>AWS S3, Azure Storage, Google Cloud Storage 등의 클라우드 객체 저장소에 사용이 가능합니다.\n물론, 직접 구현한 웹 응용프로그램의 BLOB 응답에도 사용가능합니다.</p>\n<p>예제 코드에서 HTTP 요청은 <a href=\"https://www.npmjs.com/package/axios\">Axios 패키지</a>를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> requestConfig<span class=\"token operator\">:</span> AxiosRequestConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>Axios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">,</span>\n    responseType<span class=\"token operator\">:</span> <span class=\"token string\">'blob'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nAxios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>fileDownloadUrl<span class=\"token punctuation\">,</span> requestConfig<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> contentType <span class=\"token operator\">=</span>\n                res<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span><span class=\"token string\">'content-type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">'application/octet-stream'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> helper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileDownloadHelper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            helper<span class=\"token punctuation\">.</span><span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                data<span class=\"token operator\">:</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>\n                filename<span class=\"token operator\">:</span> fileName<span class=\"token punctuation\">,</span>\n                contentType<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">finally</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>전체코드는 <a href=\"https://github.com/bbonkr/bbon-filedownload-sample\">GitHub: bbon-filedownload-sample</a> 저장소에서 확인하실 수 있습니다.</p>\n<p><a href=\"https://bbon.me/bbon-filedownload-sample/\">😎 예제 페이지</a>에서 동작을 확인하실 수 있습니다. <small>(다운로드 버튼을 클릭하면, 빨간 이미지를 다운로드합니다. 확인하실 때 눈👁을 조심하십시오.)</small></p>","frontmatter":{"title":"SPA 에서 파일 다운로드","date":"September 07, 2020","description":null,"categories":["howto"],"tags":["code snippet","npm","react","typescript"],"github":null,"featuredImage":null,"draft":null,"comments":null}},"previous":{"fields":{"slug":"/2020/06/01/wsl-2-windows-10-build-2004/"},"frontmatter":{"title":"WSL 2 on Windows 10 build 2004","draft":null,"comments":null,"featuredImage":null}},"next":{"fields":{"slug":"/2020/11/14/migrate-net-core-3-1-project-to-net-5/"},"frontmatter":{"title":".NET Core 3.1 프로젝트를 .NET 5 로 마이그레이션","draft":null,"comments":null,"featuredImage":null}}},"pageContext":{"id":"9f5dd717-2670-50b3-ae53-dd3ab9942631","previousPostId":"bc5d0b4a-9404-5362-9eb1-41cbd0966feb","nextPostId":"496c435d-eb3c-56b7-a179-eaeeb8e63b35"}},
    "staticQueryHashes": ["3068608076","3199328057"]}