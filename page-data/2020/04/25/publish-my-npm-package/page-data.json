{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2020/04/25/publish-my-npm-package","result":{"data":{"site":{"siteMetadata":{"title":"<bbon />","siteUrl":"https://bbon.me"}},"markdownRemark":{"id":"eb47e94e-6915-55ae-8f3d-82f6f85b8973","excerpt":"자주 사용되는 기능을 Typescript 로 작성해서 NPM 에 게시한 후 다른 프로젝트에서 사용하고 싶어 NPM 에 패키지를 어떻게 공개하는지를 확인했습니다. 저는  스코프를 사용해서  패키지를 게시할 것입니다. 스코프 npm-scope 페이지에서 정보를 확인할 수 있습니다. npm…","html":"<p>자주 사용되는 기능을 Typescript 로 작성해서 NPM 에 게시한 후 다른 프로젝트에서 사용하고 싶어 NPM 에 패키지를 어떻게 공개하는지를 확인했습니다.</p>\n<p>저는 <code class=\"language-text\">@bbon</code> 스코프를 사용해서 <code class=\"language-text\">@bbon/formatter</code> 패키지를 게시할 것입니다.</p>\n<blockquote>\n<p><a href=\"https://docs.npmjs.com/using-npm/scope.html\">스코프 npm-scope</a> 페이지에서 정보를 확인할 수 있습니다.</p>\n</blockquote>\n<p>npm 패키지는 이름이 고유해야 하는데, 약 1,268,126 개의 공개된 패키지 (2020-04-25 현재) 가 존재하는 상태에서 패키지 이름을 결정하는 것은 매우 어렵습니다만, 스코프를 사용하면 원하는 패키지 이름을 사용할 수 있다고 생각되었습니다.</p>\n<p>따라하면서 패키지를 게시하시려면 아래 내용을 확인하기 전에 <a href=\"https://www.npmjs.com/\">npm</a> 계정을 만들고 시작하는 것을 제안합니다.</p>\n<h2>프로젝트 구성</h2>\n<p>GitHub 에 저장소를 만들고, 로컬 저장소로 복제한 후 시작합니다.</p>\n<h3>프로젝트 초기화</h3>\n<p>프로젝트를 초기화합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> init</code></pre></div>\n<p><code class=\"language-text\">package.json</code> 파일을 편집기로 열고 필요한 정보를 편집합니다.</p>\n<blockquote>\n<p><a href=\"https://github.com/bbonkr/bbon-formatter/blob/master/package.json\">package.json</a> 파일을 확인하십시오.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@bbon/formatter\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Format the entered values.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git+https://github.com/bbonkr/bbon-formatter.git\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"homepage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/bbonkr/bbon-formatter\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"bugs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/bbonkr/bbon-formatter/issues\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"formatting\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"utility\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Pon Cheol Ku &lt;dev@bbon.kr> (http://bbon.kr)\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>package.json 파일의 명세는 <a href=\"https://docs.npmjs.com/files/package.json\">npm-package.json</a> 페이지에서 확인할 수 있습니다.</p>\n</blockquote>\n<h3>프로젝트 설정</h3>\n<p>기능을 구현하기 위해서 타입스크립트를 사용합니다.</p>\n<p>코드 작성 규칙 지정을 위해 eslint, prettier 를 사용합니다.</p>\n<p>단위테스트는 jest를 사용합니다.</p>\n<p>의존 패키지를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev typescript eslint prettier @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-config-prettier eslint-plugin-import eslint-plugin-prettier jest @types/jest @types/node ts-jest</code></pre></div>\n<p><code class=\"language-text\">.prettierrc</code> 파일을 만들고, 구성 내용을 입력합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"trailingComma\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"printWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"tabWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">.eslintrc</code> 파일을 만들고, 구성 내용을 입력합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@typescript-eslint\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"plugin:@typescript-eslint/recommended\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"prettier/@typescript-eslint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:prettier/recommended\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"parserOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"ecmaVersion\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2018</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Allows for the parsing of modern ECMAScript features</span>\n    <span class=\"token property\">\"sourceType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span> <span class=\"token comment\">// Allows for the use of imports</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"no-console\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"warn\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">.eslintignore</code> 파일을 만들고 내용을 편집합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">dist/</code></pre></div>\n<p>.gitignore 파일을 만들고 내용을 편집합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">node_modules/\ndist/\n.jest/</code></pre></div>\n<h3>타입스크립트 프로젝트 추가</h3>\n<p><code class=\"language-text\">tsc --init</code> 명령으로 타입스크립트 프로젝트 파일 <code class=\"language-text\">tsconfig.json</code>을 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx tsc <span class=\"token parameter variable\">--init</span></code></pre></div>\n<blockquote>\n<p>tsconfig.json 파일의 명세는 <a href=\"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html\">tsconfig.json - typescript</a> 페이지에서 확인할 수 있습니다.</p>\n</blockquote>\n<p>만들어진 <code class=\"language-text\">tsocnfig.json</code> 파일의 내용을 편집합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* Basic Options */</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"declaration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"forceConsistentCasingInFileNames\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"__test__\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./**/*.spec.ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>코드 작성</h3>\n<p>src 디렉터리를 만들고 코드를 작성합니다.</p>\n<p><code class=\"language-text\">src/StringFormatter.ts</code> 파일의 내용입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * 포맷팅 기능을 제공합니다.\n *\n * @export\n * @class StringFormatter\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StringFormatter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * 숫자에 1000 단위 구분자를 추가해서 문자열로 출력합니다.\n   *\n   * @param {(number | string)} value\n   * @param {string} delimiter 구분자; 기본값: **,** 콤마 문자\n   * @returns {string}\n   * @memberof StringFormatter\n   */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">NumberWithDelimiter</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> delimiter <span class=\"token operator\">=</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> stringValue <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> fraction <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      stringValue <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      stringValue <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stringValue<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> splittedValue <span class=\"token operator\">=</span> stringValue<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>splittedValue<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        stringValue <span class=\"token operator\">=</span> splittedValue<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        fraction <span class=\"token operator\">=</span> splittedValue<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    stringValue <span class=\"token operator\">=</span> stringValue<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\B(?=(\\d{3})+(?!\\d))</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> delimiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>stringValue<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>fraction <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>fraction<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">src/index.ts</code> 파일의 내용입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> StringFormatter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./StringFormatter\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>단위테스트 추가</h3>\n<p><code class=\"language-text\">src/StringFormatter.spec.ts</code> 파일의 내용입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StringFormatter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./StringFormatter\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"StringFormatter\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> formatter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringFormatter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"세자리마다 구분자가 추가된 숫자 형식의 문자열\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">.</span><span class=\"token function\">NumberWithDelimiter</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1,000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"큰 숫자도 세자리마다 구분자가 추가된 숫자 형식의 문자열\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">.</span><span class=\"token function\">NumberWithDelimiter</span><span class=\"token punctuation\">(</span><span class=\"token number\">12345678901234</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"12,345,678,901,234\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"소수점 아래 값은 구분자가 추가되지 않습니다.\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">.</span><span class=\"token function\">NumberWithDelimiter</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000.1234</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1,000.1234\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자형식의 문자열을 입력하면 세자리마다 구분자가 추가된 숫자 형식의 문자열\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">.</span><span class=\"token function\">NumberWithDelimiter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1,000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자형식의 문자열을 입력하면 소수점 아래 값은 구분자가 추가되지 않습니다.\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">.</span><span class=\"token function\">NumberWithDelimiter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1000.1234\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1,000.1234\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"빈 분자열은 빈 문자열을 반환합니다.\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">.</span><span class=\"token function\">NumberWithDelimiter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>jest 구성내용을 package.json 파일에 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... 이전 내용</span>\n  <span class=\"token property\">\"jest\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"transform\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"^.+\\\\.(ts|tsx)$\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ts-jest\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"globals\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"ts-jest\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"tsConfig\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsconfig.json\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"testRegex\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\\\\.(test|spec)\\\\.((js|ts))$\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"setupFilesAfterEnv\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./__test__/setup.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"cacheDirectory\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./.jest/cache\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>NPM 스크립트</h2>\n<p>빌드, 린트, 테스트 스크립트를 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... 이전내용</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jest\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint ./src/**/*.ts\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lint:fix\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint ./src/**/*.ts --fix\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>빌드 스크립트 실행 명령은 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> run build</code></pre></div>\n<p>빌드 스크립트를 실행하면 dist 디렉터리가 만들어지고, dist 디렉터리에 타입스크립트로 작성한 코드에서 트랜스파일된 <code class=\"language-text\">StringFormatter.js</code>, <code class=\"language-text\">index.js</code>, <code class=\"language-text\">StringFormatter.d.ts</code>, <code class=\"language-text\">index.d.ts</code> 파일이 만들어 집니다.</p>\n<p>테스트 스크립트 실행 명령은 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> run <span class=\"token builtin class-name\">test</span>\n\n<span class=\"token operator\">></span> @bbon/formatter@1.0.1 <span class=\"token builtin class-name\">test</span> D:<span class=\"token punctuation\">\\</span>repos<span class=\"token punctuation\">\\</span>formatter\n<span class=\"token operator\">></span> jest\n\n PASS  src/StringFormatter.spec.ts\n  StringFormatter\n    √ 세자리마다 구분자가 추가된 숫자 형식의 문자열 <span class=\"token punctuation\">(</span>1ms<span class=\"token punctuation\">)</span>\n    √ 큰 숫자도 세자리마다 구분자가 추가된 숫자 형식의 문자열\n    √ 소수점 아래 값은 구분자가 추가되지 않습니다. <span class=\"token punctuation\">(</span>1ms<span class=\"token punctuation\">)</span>\n    √ 숫자형식의 문자열을 입력하면 세자리마다 구분자가 추가된 숫자 형식의 문자열\n    √ 숫자형식의 문자열을 입력하면 소수점 아래 값은 구분자가 추가되지 않습니다.\n    √ 빈 분자열은 빈 문자열을 반환합니다.\n\nTest Suites: <span class=\"token number\">1</span> passed, <span class=\"token number\">1</span> total\nTests:       <span class=\"token number\">6</span> passed, <span class=\"token number\">6</span> total\nSnapshots:   <span class=\"token number\">0</span> total\nTime:        <span class=\"token number\">1</span>.646s, estimated 3s\nRan all <span class=\"token builtin class-name\">test</span> suites.</code></pre></div>\n<h2>NPM 패키지 게시 준비</h2>\n<p>NPM 패키지를 게시하기 전에 패키지에 포함될 파일을 지정합니다.</p>\n<p>패키지를 사용하는 분의 입장에서 필요없는 파일은 제외하고, 꼭 필요한 파일만 전달하는 것이 좋겠습니다.</p>\n<p>현재 구성된 프로젝트를 빌드하면 dist 디렉터리가 만들어지고, 타입스크립트로 작성된 코드의 트랜스파일 결과가 저장됩니다.</p>\n<p>따라서, dist 디렉터리의 내용은 NPM 패키지에 꼭 포함되어야 합니다.</p>\n<p>다른 유명한 패키지의 내용을 확인해보니, 패키지 정보와 라이선스 정보도 포함하고 있습니다.</p>\n<p>필요한 파일만 전달되도록 구성하기 위해 <code class=\"language-text\">.npmignore</code> 파일을 만들고 내용을 편집합니다.</p>\n<p><code class=\"language-text\">.npmignore</code> 파일의 내용입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">__test__/\nsrc/\n.jest/\n.eslintignore\n.eslintrc\n.prettierrc\ntsconfig.json</code></pre></div>\n<p>npm 패키지에서 제외하는 이유는 아래와 같습니다.</p>\n<p>__test__ 디렉터리는 jest 전역 구성을 위한 코드가 있습니다.</p>\n<p>src 디렉터리는 타입스크립트로 작성된 소스코드가 있습니다.</p>\n<p>.jest 디렉터리는 jest 테스트의 캐시 파일이 있습니다.</p>\n<p>npm 패키지 정보에 메인 파일이름과 형식 파일이름을 추가합니다.</p>\n<p>package.json 파일의 내용입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...이전 내용</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"types\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/index.d.ts\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>NPM 패키지 게시</h2>\n<p>npm 패키지를 게시하기 위해 인증 정보를 저장합니다.</p>\n<p><code class=\"language-text\">npm login</code> 명령으로 인증정보를 저장할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> login</code></pre></div>\n<p>계정이름, 비밀번호, 전자우편주소, 다중인증을 사용중이면 다중인증정보를 입력하면 인증정보가 저장됩니다.</p>\n<p><code class=\"language-text\">npm config ls</code> 명령으로 정보를 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> config <span class=\"token function\">ls</span></code></pre></div>\n<p>로그인이 되었으면, 준비해둔 npm 스크립트로 빌드합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> run build</code></pre></div>\n<p>dist 디렉터리에 파일 작성된 것을 확인합니다.</p>\n<h3>NPM 패키지 최초 게시</h3>\n<p>문제가 없으면 npm publish 명령으로 게시합니다.</p>\n<p>이 때, 스코프 패키지는 기본적으로 비공개 패키지로 게시됩니다. 저는 공개 패키지로 게시할 것이므로 <code class=\"language-text\">--access public</code> 옵션을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm publish --access public</code></pre></div>\n<p>정상적으로 게시되면 npm 사이트에서 게시된 패키지를 확인할 수 있습니다.</p>\n<p><a href=\"https://www.npmjs.com/package/@bbon/formatter\">@bbon/formatter</a> 페이지와 같이 정보가 제공됩니다.</p>\n<h3>NPM 패키지 판올림</h3>\n<p>이후 변경된 내용으로 NPM 패키지를 업데이트하려면 package.json 파일의 버전을 변경해서 게시해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    // ... 이전내용\n    \"version\": \"1.0.1\"\n}</code></pre></div>\n<p>빌드 스크립트를 실행해서 변경된 내용을 dist 디렉터리 파일에 반영합니다.</p>\n<p>문제가 없으면 npm publish 명령으로 게시합니다.</p>\n<p>이 때, 스코프 패키지는 기본적으로 비공개 패키지로 게시됩니다. 저는 공개 패키지로 게시할 것이므로 <code class=\"language-text\">--access public</code> 옵션을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm publish --access public</code></pre></div>\n<blockquote>\n<p><a href=\"https://docs.npmjs.com/creating-and-publishing-scoped-public-packages\">Creating and publishing scoped public packages</a> 페이지에서 관련 정보를 확인할 수 있습니다.</p>\n</blockquote>\n<p>정상적으로 게시되면 npm 사이트에서 게시된 패키지를 확인할 수 있습니다.</p>\n<p><a href=\"https://www.npmjs.com/package/@bbon/formatter\">@bbon/formatter</a> 페이지와 같이 정보가 제공됩니다.</p>\n<h2>NPM 패키지 사용</h2>\n<p>게시한 NPM 패키지는 다른 패키지 사용과 동일하게 사용할 수 있습니다.</p>\n<p>새 프로젝트를 준비하고, 아래 명령으로 패키지를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--save</span> @bbon/formatter</code></pre></div>\n<p>설치된 패키지의 내용을 확인합니다.</p>\n<blockquote>\n<p>node_modules/@bbon/formatter 디렉터리에서 확인할 수 있습니다.</p>\n</blockquote>\n<p>dist 디렉터리와 라이선스 파일, 패키지 정보, README.md 파일만 포함되어 있음을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">프로젝트 디렉터리\n│  index.js\n│  package-lock.json\n│  package.json\n│\n└─node_modules\n    └─@bbon\n        └─formatter\n            │  LICENSE\n            │  package.json\n            │  README.md\n            │\n            └─dist\n                    index.d.ts\n                    index.js\n                    StringFormatter.d.ts\n                    StringFormatter.js</code></pre></div>\n<h2>마침</h2>\n<p>전체 코드는 <a href=\"https://github.com/bbonkr/bbon-formatter\">GitHub: bbon-formatter</a> 에서 확인할 수 있습니다.</p>","frontmatter":{"title":"나의 NPM 패키지 만들기","date":"April 25, 2020","description":null,"categories":["howto"],"tags":["npm","typescript"],"github":{"owner":"bbonkr","repo":"bbon-formatter"},"featuredImage":null,"draft":null,"comments":null}},"previous":{"fields":{"slug":"/2020/03/24/공적-마스크-안내/"},"frontmatter":{"title":"공적 마스크 안내","draft":null,"comments":null,"featuredImage":null}},"next":{"fields":{"slug":"/2020/06/01/wsl-2-windows-10-build-2004/"},"frontmatter":{"title":"WSL 2 on Windows 10 build 2004","draft":null,"comments":null,"featuredImage":null}}},"pageContext":{"id":"eb47e94e-6915-55ae-8f3d-82f6f85b8973","previousPostId":"bf4bf037-bec5-5fca-9944-8f6aa27d4264","nextPostId":"bc5d0b4a-9404-5362-9eb1-41cbd0966feb"}},"staticQueryHashes":["2644450635","3199328057"]}