{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2021/12/22/configure-end-of-line-when-using-git-for-multi-platform-development-teams","result":{"data":{"site":{"siteMetadata":{"title":"<bbon />","siteUrl":"https://bbon.me"}},"markdownRemark":{"id":"bd3f2e35-9ab6-51b8-ba71-46bdb816a741","excerpt":"개발팀의 장비가 여러 플랫폼으로 구성된 경우 GIT 구성에 따라 변경사항이 없음에도 많은 파일이 스테이징 대상으로 출력됩니다. 보통 줄의 끝 (EOL; End of line)을 처리하는 방법이 OS 마다 달라서 발생합니다. 많이 사용되는 OS…","html":"<p>개발팀의 장비가 여러 플랫폼으로 구성된 경우 GIT 구성에 따라 변경사항이 없음에도 많은 파일이 스테이징 대상으로 출력됩니다.</p>\n<p>보통 줄의 끝 (EOL; End of line)을 처리하는 방법이 OS 마다 달라서 발생합니다.</p>\n<p>많이 사용되는 OS에서 줄의 끝을 표현하는 방법은 아래와 같습니다.</p>\n<ul>\n<li>Windows 는 CRLF (<code class=\"language-text\">\\r\\n</code> Carage return, Line feed)</li>\n<li>Unix 는 LF (<code class=\"language-text\">\\n</code> Line feed)</li>\n</ul>\n<h2>구성</h2>\n<p>git config 명령으로 구성을 변경할 수 있습니다.</p>\n<p>줄의 끝을 처리하는 두가지 방법이 제공됩니다.</p>\n<h3>core.eof</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> core.eol native</code></pre></div>\n<p>core.eol에 사용할 수 있는 값은 아래와 같습니다.</p>\n<ul>\n<li>\n<p><strong>native</strong></p>\n<p>기본값, OS의 EOL 처리방법을 사용합니다.</p>\n</li>\n<li>\n<p>crlf</p>\n<p>CRLF (<code class=\"language-text\">\\r\\n</code> Carage return, Line feed)를 사용합니다.</p>\n</li>\n<li>\n<p>lf</p>\n<p>LF (<code class=\"language-text\">\\n</code> Line feed)를 사용합니다.</p>\n</li>\n</ul>\n<p>아래 명령으로 구성 내용을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--list</span></code></pre></div>\n<h3>core.autocrlf</h3>\n<p>git 데이터베이스에 텍스트 파일의 변경 이력 데이터 입출력시 줄의 끝을 어떻게 처리할지 결정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> core.autocrlf <span class=\"token boolean\">true</span></code></pre></div>\n<p>core.autocrlf 에 사용할 수 있는 값은 아래와 같습니다.</p>\n<ul>\n<li>\n<p>false</p>\n<p>기본값, 파일의 내용 그대로 데이터베이스 변경 이력에 입출력합니다.</p>\n</li>\n<li>\n<p><strong>true</strong></p>\n<p>데이터베이스에 입력하기 전에 CRLF 를 LF 로 변경합니다.</p>\n</li>\n<li>\n<p>input</p>\n<p>LF 를 줄의 끝으로 사용합니다.</p>\n</li>\n</ul>\n<h2>무엇을 해야 하나요?</h2>\n<p>개발팀에 Windows, Macos, Linux 를 기반으로 개발을 진행하는 팀원 중 Windows 사용자는 core.autocrlf 구성의 값을 true 로 설정하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> git config <span class=\"token operator\">--</span>global core<span class=\"token punctuation\">.</span>autocrlf true</code></pre></div>\n<p>Macos, Linux 사용자의 경우 LF 가 사용되므로, core.autocrlf 구성의 값을 input으로 설정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> core.autocrlf input</code></pre></div>\n<h2>더 많은 내용</h2>\n<p><a href=\"https://docs.github.com/en/get-started/getting-started-with-git/configuring-git-to-handle-line-endings#global-settings-for-line-endings\">GitHub Docs: Configuring Git to handle line endings</a> 페이지에서 추가정보를 찾을 수 있습니다.</p>\n<p><code class=\"language-text\">.gitattributes</code> 파일을 사용해서 사용자가 git 구성을 변경하지 않아도 동일한 저장소를 사용해서 협업하는 사용자간 줄의 끝 처리를 공유하는 방법이 설명되어 있습니다.</p>","frontmatter":{"title":"Configure end of line when using git for multi-platform development teams","date":"2021-12-22","description":null,"categories":["blog","computing"],"tags":["eol","git","troubleshooting"],"github":null,"featuredImage":null,"draft":null,"comments":null}},"previous":{"fields":{"slug":"/2021/12/18/many-to-many-relationship-on-entity-framework-core-6/"},"frontmatter":{"title":"Many to many relationship on EntityFrameworkCore 6","draft":null,"comments":null,"featuredImage":null}},"next":{"fields":{"slug":"/2022/01/03/node-js-max-http-header-size/"},"frontmatter":{"title":"node.js max-http-header-size","draft":null,"comments":null,"featuredImage":null}}},"pageContext":{"id":"bd3f2e35-9ab6-51b8-ba71-46bdb816a741","previousPostId":"e786fe19-c9d7-5970-afb1-65d966a42ff2","nextPostId":"fe29086b-dcc6-58d3-af41-2752d188ef39"}},"staticQueryHashes":["2644450635","3199328057"],"slicesMap":{}}