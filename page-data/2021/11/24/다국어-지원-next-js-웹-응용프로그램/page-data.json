{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/2021/11/24/다국어-지원-next-js-웹-응용프로그램/",
    "result": {"data":{"site":{"siteMetadata":{"title":"<bbon />"}},"markdownRemark":{"id":"fa590b86-d058-5486-9e1b-4d02ce265c6d","excerpt":"next.js 웹 응용프로그램이 다국어를 지원하기 위해 next-i18next 를 사용하는 예제에 대한 설명입니다. baseURL 하위 경로를 사용해서 언어별 라우트가 구현됩니다. 의존 패키지 관련 의존 패키지는 아래와 같습니다. next 12.0.4 next-i18next 9.1.…","html":"<p>next.js 웹 응용프로그램이 다국어를 지원하기 위해 next-i18next 를 사용하는 예제에 대한 설명입니다.</p>\n<p>baseURL 하위 경로를 사용해서 언어별 라우트가 구현됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">http://myapp.com     &lt;- 기본 언어\nhttp://myapp.com/en  &lt;- 영어\nhttp://myapp.com/ru  &lt;- 러시아어</code></pre></div>\n<h2>의존 패키지</h2>\n<p>관련 의존 패키지는 아래와 같습니다.</p>\n<ul>\n<li>next 12.0.4</li>\n<li>next-i18next 9.1.0</li>\n<li>react 17.0.2</li>\n<li>react-dom 17.0.2</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save react react-dom next next-i18next </code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev typescript @types/react @types/react-dom</code></pre></div>\n<h2>구성 파일</h2>\n<p>프로젝트 루트 디렉터리에 <code class=\"language-text\">next.config.js</code>, <code class=\"language-text\">next-i18next.config.js</code> 파일을 추가합니다.</p>\n<blockquote>\n<p><code class=\"language-text\">next.config.js</code> 파일과 <code class=\"language-text\">next-i18next.config.js</code> 파일은 프로젝트 루트에서 작성되어야 하고, <strong>파일이름</strong>은 <strong>지정된 이름</strong>을 사용해야 진행에 문제가 발생하지 않습니다.</p>\n</blockquote>\n<h3>next-i18next.config.js 파일</h3>\n<p>자세한 내용은 <a href=\"https://github.com/isaachinman/next-i18next\">GitHub: next-i18next</a> 저장소에서 찾으실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">i18n</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">defaultLocale</span><span class=\"token operator\">:</span> <span class=\"token string\">'ko'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">locales</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ko'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'en'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ru'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">defaultNS</span><span class=\"token operator\">:</span> <span class=\"token string\">'common'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">localeDetection</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">defaultLocale</code> 은 언어 경로를 포함하지 않는 언어를 지정합니다. <code class=\"language-text\">locales</code> 는 지원하는 언어를 모두 작성합니다. <code class=\"language-text\">defaultNS</code> 는 번역 파일의 파일이름을 작성합니다. (기본값은 common 입니다.) <code class=\"language-text\">localeDetection</code> 은 웹서버에 요청시 요청 헤더의 accept-language 를 사용해서 언어를 지정할지를 결정합니다. (false 로 지정되는 경우 accept-language 값을 무시합니다.)</p>\n<h3>next.config.js 파일</h3>\n<p>자세한 내용은 <a href=\"https://nextjs.org/docs/advanced-features/i18n-routing#limits-for-the-i18n-config\">next.js Internationalized routing</a> 페이지에서 찾으실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> i18n <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./next-i18next.config'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @type {import('next').NextConfig}\n */</span>\n<span class=\"token keyword\">const</span> nextConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* config options here */</span>\n    i18n<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> nextConfig<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">next-i18next.config.js</code> 파일에서 작성한 구성을 <code class=\"language-text\">next.config.js</code> 파일에서 next config의 i18n 속성으로 사용합니다.</p>\n<h2>번역 파일</h2>\n<p>프로젝트 루트에 public 디렉터리를 작성합니다. public 디렉터리에 locales 디렉터리를 작성합니다. locales 디렉터리에 언어별 디렉터리를 작성합니다. locales 디렉터리의 언어별 디렉터리에 common.json 파일을 작성합니다.</p>\n<blockquote>\n<p>locales 디렉터리의 언어별 디렉터리의 이름은 next-i18next.config.js 파일의 locales 에 입력되는 문자열 배열의 항목들의 이름으로 디렉터리 이름을 결정합니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">├───public\n│   └───locales\n│       ├───en\n│       ├───ko\n│       └───ru</code></pre></div>\n<p>common.json 파일의 내용은 아래와 같이 유효한 json 형식으로 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"global\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next-i18next 예제\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"index\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"안녕하세요! 👋\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"about\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"소개합니다! 😊 \"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"debug\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"디버그\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"navigator\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"link\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Link 컴포넌트 사용\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"router\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Router 사용\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>번역파일의 내용을 사용할 때는 아래와 같이 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useTranslation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next-i18next'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Compo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> i18n<span class=\"token punctuation\">,</span> t <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTranslation</span><span class=\"token punctuation\">(</span><span class=\"token string\">'common'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'global.title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* 한국어인 경우 \"next-i18next 예제\" 출력 */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>확인</h2>\n<p>이렇게 구성한 후 연결되는 경우 next.js 의 기능이 i18n 과 연동되어 동작합니다.</p>\n<p>확인된 기능은 아래와 같습니다.</p>\n<p>next.js의 아래 두 기능은 locale 을 지정하지 않으면, 현재 i18n.language 값을 locale 로 지정되어 동작합니다.</p>\n<ul>\n<li>Link 컴포넌트 <code class=\"language-text\">next/link</code></li>\n<li>Router <code class=\"language-text\">next/router</code></li>\n</ul>\n<h3>next/link</h3>\n<p>Anchor 는 locale 을 지정하지 않으면 현재 i18n.language 의 값을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// import Link from 'next/link';</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>href<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>label<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3>next/router</h3>\n<p>router 는 locale 을 지정하지 않으면 i18n.language 값을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/router'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Compo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/somepath'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>label<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Change language</h3>\n<p>사용자가 언어를 변경하는 기능을 지원하려면 아래와 유사하게 <code class=\"language-text\">i18n.changeLanguage()</code> 를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">i18n<span class=\"token punctuation\">.</span><span class=\"token function\">changeLanguage</span><span class=\"token punctuation\">(</span>languageCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> pathname<span class=\"token punctuation\">,</span> query<span class=\"token punctuation\">,</span> asPath <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> router<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 값 확인용 콘솔 출력</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i18n.changeLanguage -> callback'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'language'</span><span class=\"token punctuation\">,</span> languageCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'pathname, query, asPath'</span><span class=\"token punctuation\">,</span>\n        pathname<span class=\"token punctuation\">,</span>\n        query<span class=\"token punctuation\">,</span>\n        asPath<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">groupEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> pathname<span class=\"token punctuation\">,</span> query <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> asPath<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        locale<span class=\"token operator\">:</span> languageCode<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>i18n.changeLanguage() 실행 위치를 주의해야 합니다. 예를 들어 _app.tsx 에 위 코드를 사용할 때, i18n.changeLanguage() 실행 후 i18n.language 의 변경이 자식 컴포넌트에서 정확하게 처리되는지 확인해야 합니다. _app.tsx 에서 사용하는 것보다 자식 컴포넌트에서 사용하는 것이 더 좋다고 생각됩니다. 이 경우 문제없이 동작하는 것으로 확인되었습니다.</p>\n</blockquote>\n<h2>시연</h2>\n<p><a href=\"https://sample-next-i18next.vercel.app/\">sample-next-i18next.vercel.app</a> 페이지에서 동작을 확인할 수 있습니다.</p>\n<h2>참조</h2>\n<p><a href=\"https://github.com/bbonkr/sample-next-i18next\">GitHub: sample-next-i18next</a> 저장소에서 코드를 확인할 수 있습니다.</p>\n<ul>\n<li><a href=\"https://nextjs.org/docs/getting-started\">next.js</a></li>\n<li><a href=\"https://github.com/isaachinman/next-i18next\">next-i18next</a></li>\n<li><a href=\"https://react.i18next.com/\">react-i18next</a></li>\n<li><a href=\"https://github.com/bbonkr/sample-next-i18next\">GitHub: sample-next-i18next</a></li>\n</ul>","frontmatter":{"title":"다국어 지원 next.js 웹 응용프로그램","date":"November 24, 2021","description":null,"categories":["blog","computing","repository"],"tags":["github","github-repository","i18n","next-i18next","next-js","react","typescript"],"github":{"owner":"bbonkr","repo":"sample-next-i18next"},"image":null,"draft":null,"comments":null}},"previous":{"fields":{"slug":"/2021/11/09/net-sdk를-설치한-후-net-sdk-목록이-비어-있습니다/"},"frontmatter":{"title":".NET SDK를 설치한 후 .NET SDK 목록이 비어 있습니다","image":null,"draft":null,"comments":null}},"next":{"fields":{"slug":"/2021/12/14/npm-bbon-react-calendar-package/"},"frontmatter":{"title":"NPM @bbon/react-calendar package","image":null,"draft":null,"comments":null}}},"pageContext":{"id":"fa590b86-d058-5486-9e1b-4d02ce265c6d","previousPostId":"503086cd-1eb8-5396-bef2-78a13f1c447a","nextPostId":"2b8f3299-ae49-5f6a-8a82-e175d017c4bf"}},
    "staticQueryHashes": ["2568428658","3199328057"]}