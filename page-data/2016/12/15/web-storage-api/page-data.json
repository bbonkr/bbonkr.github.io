{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/2016/12/15/web-storage-api/",
    "result": {"data":{"site":{"siteMetadata":{"title":"<bbon />"}},"markdownRemark":{"id":"ffb2ea9e-cb49-567f-ab3d-ddc36db9a46b","excerpt":"Web Storage API는 브라우저가 쿠키를 사용하는 것보다 훨씬 더 직관적인 방법으로 키-값 쌍을 안전하게 저장할 수 있는 메커니즘을 제공하는 합니다.  로컬 저장소는 쿠키보다 저장 용량이 크며, 저장된 데이터를 서버로 전송하지 않습니다. Web Storage API…","html":"<p>Web Storage API는 브라우저가 쿠키를 사용하는 것보다 훨씬 더 직관적인 방법으로 키-값 쌍을 안전하게 저장할 수 있는 메커니즘을 제공하는 합니다. <sup id=\"fnref-mdn-using-the-web-storage-api\"><a href=\"#fn-mdn-using-the-web-storage-api\" class=\"footnote-ref\">mdn-using-the-web-storage-api</a></sup></p>\n<p>로컬 저장소는 쿠키보다 저장 용량이 크며, 저장된 데이터를 서버로 전송하지 않습니다.</p>\n<p>Web Storage API의 Storage 인터페이스<sup id=\"fnref-mdn-storage-interface\"><a href=\"#fn-mdn-storage-interface\" class=\"footnote-ref\">mdn-storage-interface</a></sup>는 특정 도메인에 대한 세션 저장소 또는 로컬 저장소에 대한 액세스를 제공하며 저장된 데이터 항목을 추가, 수정 또는 삭제할 수 있습니다.</p>\n<p>동일 원본 <small>Origin</small> (도메인 및 프로토콜)에서는 데이터를 저장한 페이지가 달라도 동일한 로컬 저장소에 대해 I/O가 가능합니다.</p>\n<p>Web Storage 인터페이스는 window 객체의 localStorage 와 SessionStorage 속성으로 구현되어 있습니다.</p>\n<p>두 속성의 유일한 차이점은 localStorage에 저장된 데이터에는 만료 시간이 없지만, sessionStorage에 저장된 데이터는 브라우징 세션이 끝나면 (즉, 브라우저가 닫힐 때) 지워집니다.</p>\n<h2>Storage Interface<sup id=\"fnref-mdn-storage-interface\"><a href=\"#fn-mdn-storage-interface\" class=\"footnote-ref\">mdn-storage-interface</a></sup></h2>\n<p>로컬 저장소에 데이터를 키-값 형태로 저장합니다.</p>\n<p>값은 문자열 형식만을 지원합니다.</p>\n<h3>명세 <small>Specifications</small></h3>\n<p>Storage Interface 의 명세<sup id=\"fnref-storage-interface-sepcification\"><a href=\"#fn-storage-interface-sepcification\" class=\"footnote-ref\">storage-interface-sepcification</a></sup>는 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">interface Storage {\n  readonly attribute unsigned long length;\n  DOMString? key(unsigned long index);\n  getter DOMString? getItem(DOMString key);\n  setter void setItem(DOMString key, DOMString value);\n  deleter void removeItem(DOMString key);\n  void clear();\n};</code></pre></div>\n<h3>브라우저 지원 확인 <small>Check Browser support</small></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> Storage <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 현재 브라우저는 Web Storage API를 지원합니다.</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 현재 브라우저는 Web Storage API를 지원하지 않습니다.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>속성 <small>Properties</small></h3>\n<h4>Storage.length</h4>\n<p>로컬 저장소에 저장된 데이터의 수를 가져옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">;</span>\n\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> countOfKeyValuePairs <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></code></pre></div>\n<h3>메서드 <small>Methods</small></h3>\n<h4>Storage.key(n)</h4>\n<p>n 번째 키를 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">;</span>\n\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ==> key1</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ==> key2</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ==> key3</span></code></pre></div>\n<h4>Storage.setItem(k, v)</h4>\n<p>로컬 저장소에 데이터를 키 <code class=\"language-text\">k</code>, 값 <code class=\"language-text\">v</code> 로 저장합니다.</p>\n<p>새로운 키 <code class=\"language-text\">k</code> 로 데이터를 입력하면 로컬 저장소에 새로운 항목이 저장되고, 존재하는 키 <code class=\"language-text\">k</code> 를 입력하면 기존 항목의 값이 갱신됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">;</span>\n\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 새로운 항목이 추가됨</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 새로운 항목이 추가됨</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 기존 키 key1 항목의 값이 'value3' 으로 갱신됨</span></code></pre></div>\n<h4>Storage.getItem(k)</h4>\n<p>로컬 저장소에서 키 <code class=\"language-text\">k</code>에 해당하는 항목의 값을 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">;</span>\n\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> val1 <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ==> 'value1'</span>\n<span class=\"token keyword\">var</span> var2 <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ==> 'value2'</span>\n<span class=\"token keyword\">var</span> var3 <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ==> undefined</span></code></pre></div>\n<h4>Storage.removeItem(k)</h4>\n<p>로컬 저장소에서 키 <code class=\"language-text\">k</code>에 해당하는 항목을 제거합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> countOfKeyValuePairs <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncountOfKeyValuePairs <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncountOfKeyValuePairs <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span></code></pre></div>\n<h4>Storage.clear()</h4>\n<p>로컬 저장소를 초기화합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> countOfKeyValuePairs <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncountOfKeyValuePairs <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncountOfKeyValuePairs <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span></code></pre></div>\n<h3>브라우저 호환성 <small>Browser compatibility</small></h3>\n<p>웹 브라우저마다 로컬 저장소 <small>localStorage, sessionStorage</small> 저장 수준이 다릅니다. Web Storage Support Test<sup id=\"fnref-web-storage-support-test\"><a href=\"#fn-web-storage-support-test\" class=\"footnote-ref\">web-storage-support-test</a></sup> 사이트에서 현재 웹 브라우저의 저장 수준을 대략적으로 확인할 수 있습니다.</p>\n<h4>데스크톱 <small>Desktop</small></h4>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Feature</th>\n<th align=\"center\">Chrome</th>\n<th align=\"center\">Firefox (Gecko)</th>\n<th align=\"center\">Internet Explorer</th>\n<th align=\"center\">Opera</th>\n<th align=\"center\">Safari (WebKit)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">localStorage</td>\n<td align=\"center\">4</td>\n<td align=\"center\">3.5</td>\n<td align=\"center\">8</td>\n<td align=\"center\">10.50</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td align=\"left\">sessionStorage</td>\n<td align=\"center\">5</td>\n<td align=\"center\">2</td>\n<td align=\"center\">8</td>\n<td align=\"center\">10.50</td>\n<td align=\"center\">4</td>\n</tr>\n</tbody>\n</table>\n<h4>모바일 <small>Mobile</small></h4>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Feature</th>\n<th align=\"center\">Android</th>\n<th align=\"center\">Firefox Mobile (Gecko)</th>\n<th align=\"center\">IE Phone</th>\n<th align=\"center\">Opera Mobile</th>\n<th align=\"center\">Safari Mobile</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Basic support</td>\n<td align=\"center\">2.1</td>\n<td align=\"center\">?</td>\n<td align=\"center\">8</td>\n<td align=\"center\">11</td>\n<td align=\"center\">3.2<sup id=\"fnref-ios-5-1-safarimobile\"><a href=\"#fn-ios-5-1-safarimobile\" class=\"footnote-ref\">ios-5-1-safarimobile</a></sup></td>\n</tr>\n</tbody>\n</table>\n<h2>window.localStorage <sup id=\"fnref-mdn-window-localstorage\"><a href=\"#fn-mdn-window-localstorage\" class=\"footnote-ref\">mdn-window-localstorage</a></sup></h2>\n<p>만료시간이 없는 데이터를 키-값 형태로 저장합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">;</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> val1 <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>window.sessionStorage <sup id=\"fnref-mdn-window-sessionstorage\"><a href=\"#fn-mdn-window-sessionstorage\" class=\"footnote-ref\">mdn-window-sessionstorage</a></sup></h2>\n<p>브라우징 세션이 끝나면 초기화되는 데이터를 키-값 형태로 저장합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>sessionStorage<span class=\"token punctuation\">;</span>\nstorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> val1 <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-mdn-using-the-web-storage-api\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\">MDN: Using the Web Storage API</a><a href=\"#fnref-mdn-using-the-web-storage-api\" class=\"footnote-backref\">↩</a></li>\n<li id=\"fn-mdn-storage-interface\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Storage\">MDN: storage</a><a href=\"#fnref-mdn-storage-interface\" class=\"footnote-backref\">↩</a></li>\n<li id=\"fn-storage-interface-sepcification\"><a href=\"https://html.spec.whatwg.org/multipage/webstorage.html#the-storage-interface\">The Storage Interface</a><a href=\"#fnref-storage-interface-sepcification\" class=\"footnote-backref\">↩</a></li>\n<li id=\"fn-web-storage-support-test\"><a href=\"http://dev-test.nemikor.com/web-storage/support-test/\">Web Storage Support Test</a><a href=\"#fnref-web-storage-support-test\" class=\"footnote-backref\">↩</a></li>\n<li id=\"fn-ios-5-1-safarimobile\">iOS 5.1부터 Safari Mobile 은 localStorage 데이터를 캐시 디렉터리에 저장합니다. 캐시 디렉터리는 일반적으로 공간이 부족한 경우 시스템에 의해 정리될 수도 있습니다.<a href=\"#fnref-ios-5-1-safarimobile\" class=\"footnote-backref\">↩</a></li>\n<li id=\"fn-mdn-window-localstorage\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\">MDN: window.localStorage</a><a href=\"#fnref-mdn-window-localstorage\" class=\"footnote-backref\">↩</a></li>\n<li id=\"fn-mdn-window-sessionstorage\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage\">MDN: window.sessionStorage</a><a href=\"#fnref-mdn-window-sessionstorage\" class=\"footnote-backref\">↩</a></li>\n</ol>\n</div>","frontmatter":{"title":"Javascript Web Storage API","date":"December 15, 2016","description":"Javascript Web Storage API","categories":["computing"],"tags":["javascript","api","web storage"],"github":null}},"previous":{"fields":{"slug":"/2016/12/07/create-offline-installation-of-visual-studio-2017-rc/"},"frontmatter":{"title":"Visual Studio 2017 RC 설치"}},"next":{"fields":{"slug":"/2017/01/25/jekyll-on-ubuntu/"},"frontmatter":{"title":"Jekyll on Ubuntu"}}},"pageContext":{"id":"ffb2ea9e-cb49-567f-ab3d-ddc36db9a46b","previousPostId":"ceddcf74-18ed-570b-a365-376d18db34ad","nextPostId":"7ed5f586-0c24-5489-a888-6aa62c695ec5"}},
    "staticQueryHashes": ["2841359383","3199328057"]}