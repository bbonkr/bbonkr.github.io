{"version":3,"file":"component---src-pages-archive-tsx-d8ef08a7cdd5e4797503.js","mappings":"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","sources":["webpack://bbon.me/./src/components/categories/category-list.tsx","webpack://bbon.me/./src/components/categories/simple-category-list.tsx","webpack://bbon.me/./src/components/post-list-item.tsx","webpack://bbon.me/./src/pages/archive.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Tag } from '../../models/data';\n\ninterface CategoryListProps {\n    categories?: Tag[];\n    selectedCategory?: string;\n    onChange?: (category: string) => void;\n}\n\nexport const CategoryList = ({\n    categories,\n    selectedCategory,\n    onChange,\n}: CategoryListProps) => {\n    const handleClickTag = (tag: string) => () => {\n        if (onChange) {\n            onChange(tag);\n        }\n    };\n\n    return (\n        <ul className=\"flex flex-row flex-wrap break-words gap-3 px-4 py-3\">\n            {categories?.map((category) => (\n                <li\n                    key={category.fieldValue}\n                    className={`cursor-pointer text-green-600 dark:text-green-600  p-2 ${\n                        selectedCategory === category.fieldValue\n                            ? 'cursor-not-allowed border-green-600 border-b-2'\n                            : ''\n                    }`}\n                    onClick={handleClickTag(category.fieldValue)}\n                >\n                    {category.fieldValue} ({category.totalCount})\n                </li>\n            ))}\n        </ul>\n    );\n};\n","import { Link } from 'gatsby';\nimport * as React from 'react';\nimport kebabCase from 'lodash/kebabCase';\n\ninterface SimpleCategoryListProps {\n    categories?: string[];\n}\n\nexport const SimpleCategoryList = ({ categories }: SimpleCategoryListProps) => {\n    return (\n        <ul className=\"list-style-none flex gap-3 flex-wrap break-words\">\n            {categories?.map((category) => {\n                return (\n                    <li key={category}>\n                        <Link\n                            to={`/categories/${kebabCase(category)}`}\n                            className=\"text-base md:text-sm text-green-500 no-underline hover:underline\"\n                        >\n                            {category}\n                        </Link>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n","import { Link } from 'gatsby';\nimport * as React from 'react';\nimport { Post } from '../models/data';\nimport { SimpleTagList } from './tags';\nimport { SimpleCategoryList } from './categories';\n\nimport '../components/tags/tag-list.css';\n\ninterface PostListItemProps {\n    post: Post;\n}\n\nconst PostListItem = ({ post }: PostListItemProps) => {\n    const now = +new Date();\n    const postDate = Date.parse(`${post.node.frontmatter.date}`);\n    const tempDate = postDate + 1000 * 60 * 60 * 24 * 8;\n    const isNew = now < tempDate;\n\n    return (\n        <article\n            className=\"post-list-item py-6\"\n            itemScope\n            itemType=\"http://schema.org/Article\"\n        >\n            <header className=\"pt-6\">\n                <aside>\n                    {post.node.frontmatter.categories && (\n                        <SimpleCategoryList\n                            categories={post.node.frontmatter.categories}\n                        />\n                    )}\n                </aside>\n\n                <h2 className=\"font-bold font-sans break-words text-gray-900 dark:text-gray-100 pb-2 text-3xl md:text-4xl \">\n                    <Link to={post.node.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">\n                            {post.node.frontmatter.title}\n                        </span>\n                    </Link>\n                </h2>\n\n                <div className=\"indicator pr-10\">\n                    {isNew && (\n                        <span className=\"indicator-item indicator-end indicator-middle badge badge-secondary\">\n                            NEW\n                        </span>\n                    )}\n                    <div>\n                        <span className=\"pr-2\">üóìÔ∏è</span>\n                        <small className=\"text-sm md:text-base font-normal text-gray-600 dark:text-gray-400\">\n                            {post.node.frontmatter.date.toLocaleString()}\n                        </small>\n                    </div>\n                </div>\n            </header>\n            <section className=\"article-body mt-1 break-words\">\n                <p\n                    dangerouslySetInnerHTML={{\n                        __html:\n                            (post.node.frontmatter.description ||\n                                post.node.excerpt) ??\n                            '',\n                    }}\n                    itemProp=\"description\"\n                />\n            </section>\n\n            <footer>\n                <aside className=\"text-base md:text-sm text-gray-500 flex flex-row\">\n                    <SimpleTagList tags={post.node.frontmatter.tags} />\n                </aside>\n            </footer>\n        </article>\n    );\n};\n\nexport default PostListItem;\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport { Posts } from '../models/data';\nimport PostListItem from '../components/post-list-item';\n\nconst BlogPage = ({ data, location }: PageProps<Posts>) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`;\n    const posts = data.allMarkdownRemark.edges;\n\n    if (posts && posts.length === 0) {\n        return (\n            <Layout location={location} title={siteTitle}>\n                <Seo title=\"All posts\" />\n\n                <p>\n                    No blog posts found. Add markdown posts to \"content/blog\"\n                    (or the directory you specified for the\n                    \"gatsby-source-filesystem\" plugin in gatsby-config.js).\n                </p>\n            </Layout>\n        );\n    }\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo title=\"Archieves\" />\n            <header>\n                <h1>Archives</h1>\n            </header>\n            <ol className=\"list-style-none\">\n                {posts?.map((post) => {\n                    const title =\n                        post.node.frontmatter.title || post.node.fields.slug;\n\n                    return (\n                        <li key={post.node.fields.slug}>\n                            <PostListItem post={post} />\n                        </li>\n                    );\n                })}\n            </ol>\n        </Layout>\n    );\n};\n\nexport const pageQuery = graphql`\n    query archivePageQuery {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(limit: 10, sort: { frontmatter: { date: DESC } }) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"YYYY-MM-DD\")\n                        title\n                        description\n                        tags\n                        categories\n                        featuredImage {\n                            childImageSharp {\n                                gatsbyImageData(layout: FIXED)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default BlogPage;\n"],"names":["CategoryList","_ref","categories","selectedCategory","onChange","React","className","map","category","key","fieldValue","onClick","tag","totalCount","SimpleCategoryList","Link","to","kebabCase","post","isNew","Date","parse","node","frontmatter","date","itemScope","itemType","fields","slug","itemProp","title","toLocaleString","dangerouslySetInnerHTML","__html","description","excerpt","SimpleTagList","tags","data","location","siteTitle","site","siteMetadata","_data$site$siteMetada","posts","allMarkdownRemark","edges","length","Layout","Seo","PostListItem"],"sourceRoot":""}