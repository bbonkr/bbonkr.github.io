{"version":3,"file":"component---src-pages-tags-index-tsx-5b5b699920cc64efb2e4.js","mappings":"uLAoGA,UAnEiB,SAAC,GAAwC,QAAtCA,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,KAC1B,EAAkCC,EAAAA,SAA0B,CAAEC,OAAQ,KAA/DC,EAAP,KAAkBC,EAAlB,KAEyBC,EAIrBL,EAJAM,kBAAqBD,MAEDE,EAEpBP,EAHAQ,KACIC,aAAgBF,MAqBxB,OACI,gBAAC,IAAD,CAAQR,SAAUA,EAAUQ,MAAOA,GAC/B,gBAAC,IAAD,CAAKA,MAAM,aACX,2BAASG,UAAU,QACf,8BACI,mCAEJ,4BACI,uBAAKA,UAAU,UACX,yBAAOA,UAAU,SACb,yBACIC,KAAK,OACLC,KAAK,MACLF,UAAU,wJACVG,SA3BP,SAACC,GAClB,IAAMC,EAAQD,EAAME,OAAOD,MACrBH,EAAOE,EAAME,OAAOJ,KAE1BR,GAAa,SAACa,GAAD,8BACLA,MAAAA,EAAAA,EAAa,GADR,CAETf,OAAQ,OAAF,WACEe,MAAAA,EAAAA,EAAa,IAAIf,QADnB,OAEDU,GAAOG,EAFN,UAsBcA,MAAK,oBAAEZ,EAAUD,cAAZ,aAAE,EAAkBgB,WAApB,QAA2B,GAChCC,YAAY,aAKxB,gBAAC,KAAD,CACIC,KAAMf,EAAMgB,QAAO,SAACC,GAAD,mBACdnB,EAAUD,QAAU,UAACC,EAAUD,cAAX,QAAC,EAAkBgB,OAElC,UAAAf,EAAUD,cAAV,UAAkBgB,MAClBI,EAAEC,WACGC,cACAC,WAFL,UAGQtB,EAAUD,cAHlB,iBAGQ,EAAkBgB,WAH1B,aAGQ,EAAuBM,kBAIzCX,SAlDG,SAACK,IACpBQ,EAAAA,EAAAA,UAAS,SAASC,GAAAA,CAAUT","sources":["webpack://bbon.me/./src/pages/tags/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport kebabCase from 'lodash/kebabCase';\nimport { graphql, PageProps, navigate } from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport { Tag } from '../../models/data';\nimport { TagList } from '../../components/tags';\n\ninterface FormValues {\n    tag?: string;\n}\n\ninterface FormState {\n    values?: FormValues;\n}\n\ninterface SiteMetadata {\n    title: string;\n}\n\ninterface Site {\n    siteMetadata: SiteMetadata;\n}\n\ninterface MarkdownRemark {\n    group: Tag[];\n}\n\ninterface Data {\n    allMarkdownRemark: MarkdownRemark;\n    site: Site;\n}\n\nconst TagsPage = ({ location, data }: PageProps<Data>) => {\n    const [formState, setFormState] = React.useState<FormState>({ values: {} });\n    const {\n        allMarkdownRemark: { group },\n        site: {\n            siteMetadata: { title },\n        },\n    } = data;\n\n    const handleClickTag = (tag: string) => {\n        navigate(`/tags/${kebabCase(tag)}`);\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        const name = event.target.name;\n\n        setFormState((prevState) => ({\n            ...(prevState ?? {}),\n            values: {\n                ...(prevState ?? {}).values,\n                [name]: value,\n            },\n        }));\n    };\n\n    return (\n        <Layout location={location} title={title}>\n            <Seo title=\"All tags\" />\n            <section className=\"py-6\">\n                <header>\n                    <h1>Tags</h1>\n                </header>\n                <main>\n                    <div className=\"w-full\">\n                        <label className=\"block\">\n                            <input\n                                type=\"text\"\n                                name=\"tag\"\n                                className=\"mt-1 block w-full rounded-md shadow-sm border-green-600 focus:border-green-300 focus:ring focus:ring-green-200 focus:ring-opacity-50 dark:bg-gray-800\"\n                                onChange={handleChange}\n                                value={formState.values?.tag ?? ''}\n                                placeholder=\"Filter\"\n                            />\n                        </label>\n                    </div>\n\n                    <TagList\n                        tags={group.filter((x) =>\n                            !formState.values || !formState.values?.tag\n                                ? true\n                                : formState.values?.tag\n                                ? x.fieldValue\n                                      .toLowerCase()\n                                      .startsWith(\n                                          formState.values?.tag?.toLowerCase()\n                                      )\n                                : false\n                        )}\n                        onChange={handleClickTag}\n                    />\n                </main>\n            </section>\n        </Layout>\n    );\n};\n\nexport default TagsPage;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            group(field: frontmatter___tags) {\n                fieldValue\n                totalCount\n                edges {\n                    node {\n                        excerpt(format: PLAIN)\n                        fields {\n                            slug\n                        }\n                        frontmatter {\n                            date(formatString: \"MMMM DD, YYYY\")\n                            title\n                            tags\n                            categories\n                            featuredImage {\n                                childImageSharp {\n                                    gatsbyImageData(layout: FIXED)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"names":["location","data","React","values","formState","setFormState","group","allMarkdownRemark","title","site","siteMetadata","className","type","name","onChange","event","value","target","prevState","tag","placeholder","tags","filter","x","fieldValue","toLowerCase","startsWith","navigate","kebabCase"],"sourceRoot":""}